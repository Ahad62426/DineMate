{"version":3,"sources":["redux/actions/index.js","constants/App.js","constants/Apis.js","services/network/index.js","redux/epics/defaultEpic.js","redux/epics/index.js","redux/reducers/index.js","redux/reducers/sessionReducer.js","redux/reducers/toastReducer.js","redux/store.js","services/firebase/index.js","views/Toaster/index.js","views/Admin/SideBar/index.js","views/Admin/Dashboard/index.js","views/Admin/Others/index.js","views/NoRoute/index.js","views/Admin/index.js","views/AdminLogin/index.js","views/Restaurants/index.js","views/App.js","index.js"],"names":["customisedAction","type","payload","extras","SIGN_IN_FAILURE","SET_SESSION","SET_TOAST","RESET_TOAST","API_ENDPOINTS","RestClient","create","baseURL","headers","Accept","Authorization","timeout","defaultEpic","default","action$","pipe","ofType","switchMap","a","email","password","post","signIn","response","status","resObj","data","problem","token","failure_action","console","log","epics","combineEpics","combineReducers","sessionReducer","state","user","admin","toastReducer","toast","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","epicMiddleware","createEpicMiddleware","logger","createLogger","collapsed","store","createStore","appReducer","applyMiddleware","run","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","this","auth","db","firestore","signInWithEmailAndPassword","signOut","name","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","Promise","resolve","onAuthStateChanged","id","uid","delete","Toaster","useSelector","dispatch","useDispatch","addToast","useToasts","useEffect","message","appearance","SideBar","props","url","useRouteMatch","to","Dashboard","Others","NoRoute","Admin","path","exact","component","AdminLogin","history","replace","onClick","Restaurants","App","firebase","isInitialized","then","getCurrentUser","AdminLanding","Component","rest","render","pathname","from","location","autoDismiss","autoDismissTimeout","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.23489390.chunk.js","sourcesContent":["export const customisedAction = (type, payload = {}, extras = {}) => {\n    return { type, payload, extras };\n};","export const SIGN_IN = 'SIGN_IN'\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS'\nexport const SIGN_IN_FAILURE = 'SIGN_IN_FAILURE'\n\nexport const SIGN_UP = 'SIGN_UP'\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'\n\nexport const GET_PROFILE_SUCCESS = 'GET_PROFILE_SUCCESS'\nexport const GET_PROFILE_FAILURE = 'GET_PROFILE_FAILURE'\n\nexport const SET_SESSION = 'SET_SESSION'\n\nexport const SET_TOAST = 'SET_TOAST'\nexport const RESET_TOAST = 'RESET_TOAST'","export const LOCAL_URL = 'http://localhost:8000/'\nexport const PUBLIC_URL = 'https://dinemateapp.herokuapp.com/'\nexport const BASE_URL = LOCAL_URL\n\nexport const API_ENDPOINTS = {\n    // createAccount: 'createAccount'\n}","/* eslint-disable import/named */\nimport { create } from 'apisauce'\nimport { BASE_URL } from '../../constants'\n\n// Rest Client for Americamp APIs\nexport const RestClient = create({\n  baseURL: `${BASE_URL}`,\n  headers: {\n    Accept: 'application/json',\n    Authorization: '',\n  },\n  timeout: 10000,\n})\n","import { switchMap } from 'rxjs/operators'\nimport { ofType } from 'redux-observable'\n\nimport { customisedAction } from '../actions'\nimport {\n  SIGN_IN,\n  SIGN_IN_SUCCESS,\n  SIGN_IN_FAILURE,\n  API_ENDPOINTS,\n} from '../../constants'\nimport { RestClient } from '../../services/network'\n\nexport class defaultEpic {\n  static default = action$ =>\n    action$.pipe(\n      ofType(SIGN_IN),\n      switchMap(\n        async ({ payload: { email, password } }) => {\n          try {\n            const response = await RestClient.post(API_ENDPOINTS.signIn, {\n              email,\n              password,\n            });\n            const { status, data: resObj, problem } = response;\n            if (status && status === 200) {\n              const { token } = resObj;\n              return customisedAction(SIGN_IN_SUCCESS, { token, failure_action: SIGN_IN_FAILURE });\n            }\n            if (status && (status === 401 || status === 422 || status === 503)) {\n              return customisedAction(SIGN_IN_FAILURE);\n            }\n            if (problem && problem === 'NETWORK_ERROR') {\n              return customisedAction(SIGN_IN_FAILURE);\n            }\n            return customisedAction(SIGN_IN_FAILURE);\n          } catch (error) {\n            console.log('Default Unknown Error', error)\n            return customisedAction(SIGN_IN_FAILURE);\n          }\n        }\n      )\n    );\n}\n","import { combineEpics } from 'redux-observable';\nimport { defaultEpic } from './defaultEpic'\n\nexport const epics = combineEpics(\n    defaultEpic.default,\n);\n","import { combineReducers } from 'redux';\nimport sessionReducer from './sessionReducer';\nimport toastReducer from './toastReducer';\n\nexport default combineReducers({\n    sessionReducer,\n    toastReducer\n});\n","import { SET_SESSION } from '../../constants'\n\nexport default (state = { user: null, admin: null }, { type, payload }) => {\n  switch (type) {\n    case SET_SESSION:\n      return { ...state, user: payload.user, admin: payload.admin }\n    default:\n      return state;\n  }\n};\n","import { \n  SET_TOAST, RESET_TOAST\n} from '../../constants'\n\nexport default (state = { toast: null }, { type, payload }) => {\n  switch (type) {\n    case SET_TOAST:\n      return { ...state, toast: payload }\n    case RESET_TOAST:\n      return { ...state, toast: null }\n    default:\n      return state;\n  }\n};\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { epics } from './epics';\nimport appReducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst epicMiddleware = createEpicMiddleware();\n\nconst logger = createLogger({\n  collapsed: true,\n});\n\nconst store = createStore(\n  appReducer,\n  {},\n  composeEnhancers(applyMiddleware(epicMiddleware, logger))\n);\n\nepicMiddleware.run(epics);\n\nexport default store;\n","import app from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firebase-firestore'\n\nconst config = {\n    apiKey: \"AIzaSyBV-_bfQ2QCkjGJqYxeAh9_CIz0sfezRaA\",\n    authDomain: \"bizinissify-cea9d.firebaseapp.com\",\n    databaseURL: \"https://bizinissify-cea9d.firebaseio.com\",\n    projectId: \"bizinissify-cea9d\",\n    storageBucket: \"bizinissify-cea9d.appspot.com\",\n    messagingSenderId: \"823024032780\",\n    appId: \"1:823024032780:web:c1a2eef793b585f4bc2229\",\n    measurementId: \"G-RQPEC6JT3Z\"\n}\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config)\n        this.auth = app.auth()\n        this.db = app.firestore()\n    }\n\n    login(email, password) {\n        return this.auth.signInWithEmailAndPassword(email, password)\n    }\n\n    logout() {\n        return this.auth.signOut()\n    }\n\n    async register(name, email, password) {\n        await this.auth.createUserWithEmailAndPassword(email, password)\n        return this.auth.currentUser.updateProfile({\n            displayName: name\n        })\n    }\n\n    isInitialized() {\n        return new Promise(resolve => {\n            this.auth.onAuthStateChanged(resolve)\n        })\n    }\n\n    getCurrentUser() {\n        return this.auth.currentUser ? {\n            id: this.auth.currentUser.uid,\n            name: this.auth.currentUser.displayName,\n            email: this.auth.currentUser.email\n        } : null;\n    }\n\n    delete() {\n        if (this.auth.currentUser) this.auth.currentUser.delete();\n    }\n}\n\nexport default new Firebase()","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useToasts } from 'react-toast-notifications'\n\nimport { customisedAction } from '../../redux/actions'\nimport { RESET_TOAST } from '../../constants/App'\n\nfunction Toaster() {\n  const toast = useSelector(({ toastReducer }) => toastReducer.toast)\n  const dispatch = useDispatch()\n  const { addToast } = useToasts()\n\n  useEffect(() => {\n    if (toast) {\n      addToast(toast.message, { appearance: toast.type })\n      dispatch(customisedAction(RESET_TOAST))\n    }\n  }, [toast, addToast, dispatch])\n\n  return (\n    <div />\n  )\n}\n\nexport default Toaster\n","import React from 'react'\nimport { Link, useRouteMatch } from 'react-router-dom'\n\nfunction SideBar(props) {\n\n  let { url } = useRouteMatch();\n\n  return (\n    <div>\n      <p>SideBar</p>\n      <Link to={`${url}`}>Dashboard</Link>\n      <Link to={`${url}/others`}>Others</Link>\n      <hr />\n      <hr />\n    </div>\n  )\n}\n\nexport default SideBar\n","import React from 'react'\n\nfunction Dashboard(props) {\n  return (\n    <div>\n      <p>Dashboard</p>\n    </div>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\n\nfunction Others(props) {\n  return (\n    <div>\n      <p>Others</p>\n    </div>\n  )\n}\n\nexport default Others\n","import React from 'react'\n\nfunction NoRoute(props) {\n  return (\n    <div>\n      <p>Page Not Found!</p>\n    </div>\n  )\n}\n\nexport default NoRoute\n","import React from 'react'\nimport { Switch, Route, useRouteMatch } from 'react-router-dom'\n\nimport SideBar from './SideBar'\nimport Dashboard from './Dashboard'\nimport Others from './Others'\nimport NoRoute from '../NoRoute'\n\nfunction Admin(props) {\n\n  let { path } = useRouteMatch();\n\n  return (\n    <div>\n      <SideBar />\n      <Switch>\n        <Route exact path={path} component={Dashboard} />\n        <Route path={`${path}/others`} component={Others} />\n        <Route component={NoRoute} />\n      </Switch>\n    </div>\n  )\n}\n\nexport default Admin\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { customisedAction } from '../../redux/actions'\nimport { SET_SESSION } from '../../constants/App'\n\nfunction AdminLogin(props) {\n\n  const admin = useSelector(({ sessionReducer }) => sessionReducer.admin)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (admin)\n      props.history.replace('/admin')\n  }, [admin])\n\n  return (\n    <div>\n      <p>AdminLogin</p>\n      <button onClick={() => dispatch(customisedAction(SET_SESSION, { admin: \"Ahad\" }))}>Login</button>\n    </div>\n  )\n}\n\nexport default AdminLogin\n","import React from 'react'\n\nfunction Restaurants(props) {\n  return (\n    <div>\n      <p>Restaurants</p>\n    </div>\n  )\n}\n\nexport default Restaurants\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport { ToastProvider } from 'react-toast-notifications';\n\nimport firebase from '../services/firebase'\n\nimport { customisedAction } from '../redux/actions'\nimport { SET_SESSION } from '../constants/App'\n\nimport Toaster from './Toaster'\nimport Admin from './Admin'\nimport AdminLogin from './AdminLogin'\nimport Restaurants from './Restaurants'\nimport NoRoute from './NoRoute'\nimport './styles.css'\n\nexport default function App() {\n\n  const admin = useSelector(({ sessionReducer }) => sessionReducer.admin)\n  const user = useSelector(({ sessionReducer }) => sessionReducer.user)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    firebase.isInitialized().then(() => {\n        if (firebase.getCurrentUser())\n            dispatch(customisedAction(SET_SESSION, firebase.getCurrentUser()))\n    })\n  }, [dispatch])\n\n  const AdminLanding = ({ component: Component, ...rest }) => (\n     <Route {...rest} render={(props) => (\n        !!admin ? \n           <Component {...props} /> : <Redirect to={{ pathname: '/adminLogin', state: { from: props.location.pathname } }} />\n     )} />\n  );\n\n    return (\n        <ToastProvider\n          autoDismiss\n          autoDismissTimeout={6000}>\n            <Router>\n                <Toaster />\n                <Switch>\n                    <Route exact path='/' component={Restaurants} />\n                    <AdminLanding path='/admin' component={Admin} />\n                    <Route path='/adminLogin' component={AdminLogin} />\n                    <Route component={NoRoute} />\n                </Switch>\n            </Router>\n        </ToastProvider>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store'\n\nimport App from './views/App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}