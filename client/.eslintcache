[{"D:\\react js\\DineMate\\client\\src\\index.js":"1","D:\\react js\\DineMate\\client\\src\\views\\App.js":"2","D:\\react js\\DineMate\\client\\src\\redux\\store.js":"3","D:\\react js\\DineMate\\client\\src\\redux\\actions\\index.js":"4","D:\\react js\\DineMate\\client\\src\\helpers\\index.js":"5","D:\\react js\\DineMate\\client\\src\\constants\\index.js":"6","D:\\react js\\DineMate\\client\\src\\views\\AdminLogin\\index.js":"7","D:\\react js\\DineMate\\client\\src\\views\\Toaster\\index.js":"8","D:\\react js\\DineMate\\client\\src\\views\\Menu\\index.js":"9","D:\\react js\\DineMate\\client\\src\\views\\NoRoute\\index.js":"10","D:\\react js\\DineMate\\client\\src\\views\\Admin\\index.js":"11","D:\\react js\\DineMate\\client\\src\\views\\Restaurants\\index.js":"12","D:\\react js\\DineMate\\client\\src\\views\\ForgotPassword\\index.js":"13","D:\\react js\\DineMate\\client\\src\\redux\\reducers\\index.js":"14","D:\\react js\\DineMate\\client\\src\\views\\CreatePassword\\index.js":"15","D:\\react js\\DineMate\\client\\src\\redux\\epics\\index.js":"16","D:\\react js\\DineMate\\client\\src\\services\\network\\index.js":"17","D:\\react js\\DineMate\\client\\src\\constants\\Apis.js":"18","D:\\react js\\DineMate\\client\\src\\constants\\Actions.js":"19","D:\\react js\\DineMate\\client\\src\\redux\\reducers\\restaurantReducer.js":"20","D:\\react js\\DineMate\\client\\src\\redux\\reducers\\sessionReducer.js":"21","D:\\react js\\DineMate\\client\\src\\constants\\Data.js":"22","D:\\react js\\DineMate\\client\\src\\redux\\reducers\\dashboardReducer.js":"23","D:\\react js\\DineMate\\client\\src\\redux\\reducers\\toastReducer.js":"24","D:\\react js\\DineMate\\client\\src\\redux\\reducers\\restaurantsReducer.js":"25","D:\\react js\\DineMate\\client\\src\\redux\\reducers\\categoriesReducer.js":"26","D:\\react js\\DineMate\\client\\src\\redux\\reducers\\menuReducer.js":"27","D:\\react js\\DineMate\\client\\src\\redux\\reducers\\usersReducer.js":"28","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\deleteUserEpic.js":"29","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\updateCategoryEpic.js":"30","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\getUsersEpic.js":"31","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\updateUserEpic.js":"32","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\deleteCategoryEpic.js":"33","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\getCategoriesEpic.js":"34","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\addCategoryEpic.js":"35","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\mergeTablesEpic.js":"36","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\getServicesQueEpic.js":"37","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\getExistingQrsEpic.js":"38","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\setTableNameEpic.js":"39","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\unMergeTablesEpic.js":"40","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\createPasswordEpic.js":"41","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\addRestaurantEpic.js":"42","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\generateQrsEpic.js":"43","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\getMenuEpic.js":"44","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\getAllRestaurantsEpic.js":"45","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\forgotPasswordEpic.js":"46","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\getRestaurantDashboardEpic.js":"47","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\getSuperAdminDashboardEpic.js":"48","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\loginEpic.js":"49","D:\\react js\\DineMate\\client\\src\\helpers\\dateTime\\index.js":"50","D:\\react js\\DineMate\\client\\src\\helpers\\localStorage\\index.js":"51","D:\\react js\\DineMate\\client\\src\\helpers\\general\\index.js":"52","D:\\react js\\DineMate\\client\\src\\views\\Admin\\SideBar\\index.js":"53","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Restaurants\\index.js":"54","D:\\react js\\DineMate\\client\\src\\views\\Admin\\GenerateQrs\\ViewQr\\index.js":"55","D:\\react js\\DineMate\\client\\src\\views\\Admin\\GenerateQrs\\index.js":"56","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Tables\\index.js":"57","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Categories\\index.js":"58","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Menu\\index.js":"59","D:\\react js\\DineMate\\client\\src\\components\\index.js":"60","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Tables\\TableDetails\\index.js":"61","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Others\\index.js":"62","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Menu\\ItemDetails\\index.js":"63","D:\\react js\\DineMate\\client\\src\\views\\Admin\\NavBar\\index.js":"64","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Dashboard\\SuperAdmin\\index.js":"65","D:\\react js\\DineMate\\client\\src\\views\\Admin\\AddRestaurant\\index.js":"66","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Dashboard\\RestaurantAdmin\\index.js":"67","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Dashboard\\KitchenAdmin\\index.js":"68","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Users\\AllUsers\\index.js":"69","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Users\\RestaurantUsers\\index.js":"70","D:\\react js\\DineMate\\client\\src\\redux\\epics\\generalizedEpic.js":"71","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Restaurants\\RestaurantsList\\index.js":"72","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Tables\\TablesList\\index.js":"73","D:\\react js\\DineMate\\client\\src\\views\\Admin\\GenerateQrs\\QrsList\\index.js":"74","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Categories\\CategoriesList\\index.js":"75","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Menu\\AddOnsList\\index.js":"76","D:\\react js\\DineMate\\client\\src\\components\\ServiceQueItem\\index.js":"77","D:\\react js\\DineMate\\client\\src\\components\\SectionHeading\\index.js":"78","D:\\react js\\DineMate\\client\\src\\components\\DashboardGridItem\\index.js":"79","D:\\react js\\DineMate\\client\\src\\components\\SmallButtonRed\\index.js":"80","D:\\react js\\DineMate\\client\\src\\components\\Separator\\index.js":"81","D:\\react js\\DineMate\\client\\src\\components\\SmallButton\\index.js":"82","D:\\react js\\DineMate\\client\\src\\components\\SmallTitle\\index.js":"83","D:\\react js\\DineMate\\client\\src\\components\\Button\\index.js":"84","D:\\react js\\DineMate\\client\\src\\components\\DashboardBatches\\index.js":"85","D:\\react js\\DineMate\\client\\src\\components\\Title\\index.js":"86","D:\\react js\\DineMate\\client\\src\\components\\DineMateTitle\\index.js":"87","D:\\react js\\DineMate\\client\\src\\components\\Input\\index.js":"88","D:\\react js\\DineMate\\client\\src\\components\\DropDown\\index.js":"89","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Menu\\MenuList\\index.js":"90","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Users\\RestaurantUsers\\UsersList\\index.js":"91","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Users\\AllUsers\\UsersList\\index.js":"92","D:\\react js\\DineMate\\client\\src\\redux\\reducers\\orderReducer.js":"93","D:\\react js\\DineMate\\client\\src\\views\\Admin\\OrderManagement\\index.js":"94","D:\\react js\\DineMate\\client\\src\\views\\Admin\\OrderManagement\\OderTable\\index.js":"95","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\orderManagementEpic.js":"96"},{"size":286,"mtime":1615677005802,"results":"97","hashOfConfig":"98"},{"size":3331,"mtime":1615677006069,"results":"99","hashOfConfig":"98"},{"size":788,"mtime":1615677005821,"results":"100","hashOfConfig":"98"},{"size":111,"mtime":1615677005803,"results":"101","hashOfConfig":"98"},{"size":85,"mtime":1615677005802,"results":"102","hashOfConfig":"98"},{"size":73,"mtime":1615677005800,"results":"103","hashOfConfig":"98"},{"size":1963,"mtime":1615677006066,"results":"104","hashOfConfig":"98"},{"size":960,"mtime":1615677006128,"results":"105","hashOfConfig":"98"},{"size":293,"mtime":1615677006073,"results":"106","hashOfConfig":"98"},{"size":155,"mtime":1615677006126,"results":"107","hashOfConfig":"98"},{"size":6747,"mtime":1616358174223,"results":"108","hashOfConfig":"98"},{"size":154,"mtime":1615677006127,"results":"109","hashOfConfig":"98"},{"size":1742,"mtime":1615677006072,"results":"110","hashOfConfig":"98"},{"size":701,"mtime":1616352546922,"results":"111","hashOfConfig":"98"},{"size":2055,"mtime":1615677006071,"results":"112","hashOfConfig":"98"},{"size":2292,"mtime":1616360377512,"results":"113","hashOfConfig":"98"},{"size":314,"mtime":1615677005823,"results":"114","hashOfConfig":"98"},{"size":1501,"mtime":1616528378169,"results":"115","hashOfConfig":"98"},{"size":4286,"mtime":1616351956104,"results":"116","hashOfConfig":"98"},{"size":1294,"mtime":1615677005819,"results":"117","hashOfConfig":"98"},{"size":1392,"mtime":1615677005820,"results":"118","hashOfConfig":"98"},{"size":7828,"mtime":1615677005799,"results":"119","hashOfConfig":"98"},{"size":1643,"mtime":1615677005817,"results":"120","hashOfConfig":"98"},{"size":5602,"mtime":1616528565669,"results":"121","hashOfConfig":"98"},{"size":982,"mtime":1615677005819,"results":"122","hashOfConfig":"98"},{"size":1443,"mtime":1615677005816,"results":"123","hashOfConfig":"98"},{"size":795,"mtime":1615677005818,"results":"124","hashOfConfig":"98"},{"size":1362,"mtime":1615677005821,"results":"125","hashOfConfig":"98"},{"size":795,"mtime":1615677005807,"results":"126","hashOfConfig":"98"},{"size":845,"mtime":1615677005814,"results":"127","hashOfConfig":"98"},{"size":912,"mtime":1615677005812,"results":"128","hashOfConfig":"98"},{"size":829,"mtime":1615677005815,"results":"129","hashOfConfig":"98"},{"size":833,"mtime":1615677005807,"results":"130","hashOfConfig":"98"},{"size":875,"mtime":1615677005809,"results":"131","hashOfConfig":"98"},{"size":830,"mtime":1615677005805,"results":"132","hashOfConfig":"98"},{"size":874,"mtime":1615677005813,"results":"133","hashOfConfig":"98"},{"size":1066,"mtime":1615677005811,"results":"134","hashOfConfig":"98"},{"size":1095,"mtime":1615677005810,"results":"135","hashOfConfig":"98"},{"size":890,"mtime":1615677005813,"results":"136","hashOfConfig":"98"},{"size":860,"mtime":1615677005814,"results":"137","hashOfConfig":"98"},{"size":898,"mtime":1615677005806,"results":"138","hashOfConfig":"98"},{"size":874,"mtime":1615677005805,"results":"139","hashOfConfig":"98"},{"size":830,"mtime":1615677005808,"results":"140","hashOfConfig":"98"},{"size":826,"mtime":1615677005810,"results":"141","hashOfConfig":"98"},{"size":1159,"mtime":1615677005809,"results":"142","hashOfConfig":"98"},{"size":860,"mtime":1615677005808,"results":"143","hashOfConfig":"98"},{"size":1047,"mtime":1615677005811,"results":"144","hashOfConfig":"98"},{"size":1193,"mtime":1615677005812,"results":"145","hashOfConfig":"98"},{"size":1015,"mtime":1615677005813,"results":"146","hashOfConfig":"98"},{"size":486,"mtime":1615677005801,"results":"147","hashOfConfig":"98"},{"size":258,"mtime":1615677005802,"results":"148","hashOfConfig":"98"},{"size":308,"mtime":1615677005801,"results":"149","hashOfConfig":"98"},{"size":6161,"mtime":1616357726797,"results":"150","hashOfConfig":"98"},{"size":2903,"mtime":1615677006049,"results":"151","hashOfConfig":"98"},{"size":1199,"mtime":1615677005830,"results":"152","hashOfConfig":"98"},{"size":3208,"mtime":1615677005831,"results":"153","hashOfConfig":"98"},{"size":2244,"mtime":1615677006057,"results":"154","hashOfConfig":"98"},{"size":4065,"mtime":1615677005826,"results":"155","hashOfConfig":"98"},{"size":2571,"mtime":1616009913941,"results":"156","hashOfConfig":"98"},{"size":400,"mtime":1615677005798,"results":"157","hashOfConfig":"98"},{"size":4288,"mtime":1615677006053,"results":"158","hashOfConfig":"98"},{"size":144,"mtime":1615677006046,"results":"159","hashOfConfig":"98"},{"size":2071,"mtime":1615677005834,"results":"160","hashOfConfig":"98"},{"size":1319,"mtime":1615677005845,"results":"161","hashOfConfig":"98"},{"size":2398,"mtime":1615677005828,"results":"162","hashOfConfig":"98"},{"size":8931,"mtime":1615677005824,"results":"163","hashOfConfig":"98"},{"size":11060,"mtime":1615677005828,"results":"164","hashOfConfig":"98"},{"size":560,"mtime":1615677005827,"results":"165","hashOfConfig":"98"},{"size":2571,"mtime":1615677006061,"results":"166","hashOfConfig":"98"},{"size":2697,"mtime":1615677006063,"results":"167","hashOfConfig":"98"},{"size":1908,"mtime":1615677005815,"results":"168","hashOfConfig":"98"},{"size":2663,"mtime":1615677006048,"results":"169","hashOfConfig":"98"},{"size":1635,"mtime":1615677006057,"results":"170","hashOfConfig":"98"},{"size":2038,"mtime":1615677005830,"results":"171","hashOfConfig":"98"},{"size":1688,"mtime":1615677005825,"results":"172","hashOfConfig":"98"},{"size":1732,"mtime":1615677005832,"results":"173","hashOfConfig":"98"},{"size":483,"mtime":1615677005792,"results":"174","hashOfConfig":"98"},{"size":274,"mtime":1615677005791,"results":"175","hashOfConfig":"98"},{"size":1061,"mtime":1615677005788,"results":"176","hashOfConfig":"98"},{"size":1497,"mtime":1615677005795,"results":"177","hashOfConfig":"98"},{"size":201,"mtime":1615677005791,"results":"178","hashOfConfig":"98"},{"size":1441,"mtime":1615677005794,"results":"179","hashOfConfig":"98"},{"size":203,"mtime":1615677005797,"results":"180","hashOfConfig":"98"},{"size":1391,"mtime":1615677005785,"results":"181","hashOfConfig":"98"},{"size":330,"mtime":1615677005786,"results":"182","hashOfConfig":"98"},{"size":188,"mtime":1615677005798,"results":"183","hashOfConfig":"98"},{"size":208,"mtime":1615677005788,"results":"184","hashOfConfig":"98"},{"size":327,"mtime":1615677005789,"results":"185","hashOfConfig":"98"},{"size":472,"mtime":1615677005788,"results":"186","hashOfConfig":"98"},{"size":2347,"mtime":1615677005841,"results":"187","hashOfConfig":"98"},{"size":2834,"mtime":1615677006062,"results":"188","hashOfConfig":"98"},{"size":2099,"mtime":1615677006059,"results":"189","hashOfConfig":"98"},{"size":564,"mtime":1616352406520,"results":"190","hashOfConfig":"98"},{"size":2893,"mtime":1616523219158,"results":"191","hashOfConfig":"98"},{"size":1454,"mtime":1616528313414,"results":"192","hashOfConfig":"98"},{"size":853,"mtime":1616362427826,"results":"193","hashOfConfig":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},"1d5yd6s",{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"196"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"196"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"196"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"196"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"196"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"196"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"196"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"196"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"196"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"196"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"196"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"196"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"196"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"196"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"196"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"196"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"196"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"196"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"196"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"196"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"196"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"196"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"196"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"406","messages":"407","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},"D:\\react js\\DineMate\\client\\src\\index.js",[],["410","411"],"D:\\react js\\DineMate\\client\\src\\views\\App.js",["412"],"import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport { ToastProvider } from 'react-toast-notifications'\r\n\r\nimport { customisedAction } from '../redux/actions'\r\nimport { SESSION_CHECK_DONE, SET_SESSION } from '../constants'\r\nimport { RestClient } from '../services/network'\r\nimport { getItem } from '../helpers'\r\n\r\nimport Toaster from './Toaster'\r\nimport Admin from './Admin'\r\nimport AdminLogin from './AdminLogin'\r\nimport ForgotPassword from './ForgotPassword'\r\nimport CreatePassword from './CreatePassword'\r\nimport Restaurants from './Restaurants'\r\nimport Menu from './Menu'\r\nimport NoRoute from './NoRoute'\r\n\r\nimport logo from '../assets/logo.png'\r\nimport './styles.css'\r\n\r\nexport default function App(props) {\r\n\r\n    const checkingSignIn = useSelector(({ sessionReducer }) => sessionReducer.checkingSignIn)\r\n    const admin = useSelector(({ sessionReducer }) => sessionReducer.admin)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (!admin) {\r\n        const storedAdmin = getItem('admin')\r\n        if (storedAdmin)\r\n            setTimeout(() => {\r\n                RestClient.setHeader('Authorization', storedAdmin.id)\r\n                dispatch(customisedAction(SET_SESSION, { admin: storedAdmin }))\r\n            }, 300)\r\n        else\r\n            setTimeout(() => dispatch(customisedAction(SESSION_CHECK_DONE)), 300)\r\n        }\r\n    }, [])\r\n\r\n    const AdminLanding = ({ component: Component, ...rest }) => (\r\n        <Route {...rest} render={(props) => (\r\n            !!admin ? \r\n            <Component {...props} /> : <Redirect to={{ pathname: '/adminLogin', state: { from: props.location.pathname } }} />\r\n        )} />\r\n    )\r\n\r\n    const CustomerLanding = ({ component: Component, ...rest }) => (\r\n        <Route {...rest} render={(props) => (\r\n            !admin ? \r\n            <Component {...props} /> : <Redirect to={{ pathname: '/admin' }} />\r\n        )} />\r\n    )\r\n\r\n    return (!checkingSignIn ?\r\n        <ToastProvider\r\n            autoDismiss\r\n            autoDismissTimeout={6000}>\r\n            <Router>\r\n                <Toaster />\r\n                <Switch>\r\n                    <Route exact path='/'>\r\n                        <Redirect to='/admin' />\r\n                    </Route>\r\n                    <AdminLanding path='/admin' component={Admin} />\r\n                    <CustomerLanding path='/restaurants' component={Restaurants} />\r\n                    <CustomerLanding exact path='/restaurant/:restaurantId/menu/' component={Menu} />\r\n                    <CustomerLanding exact path='/restaurant/:restaurantId/:tableId' component={Menu} />\r\n                    <CustomerLanding path='/adminLogin' component={AdminLogin} />\r\n                    <CustomerLanding path='/forgotPassword' component={ForgotPassword} />\r\n                    <CustomerLanding path='/createPassword/:restaurantId/:email/:hashString' component={CreatePassword} />\r\n                    <Route component={NoRoute} />\r\n                </Switch>\r\n            </Router>\r\n        </ToastProvider> :\r\n        <div className=\"full-screen-container\" style={{ background: '#b5c9bf'}}>\r\n            <img src={logo} style={{ width: '120px' }} alt=\"logo\" />\r\n        </div>\r\n    )\r\n}","D:\\react js\\DineMate\\client\\src\\redux\\store.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\actions\\index.js",[],"D:\\react js\\DineMate\\client\\src\\helpers\\index.js",[],"D:\\react js\\DineMate\\client\\src\\constants\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\AdminLogin\\index.js",["413"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { customisedAction } from '../../redux/actions'\r\nimport { ADMIN_SIGN_IN, SET_TOAST_DISMISSING } from '../../constants'\r\n\r\nimport { DineMateTitle, Title, Input, Button } from '../../components'\r\n\r\nimport logo from '../../assets/logo.png'\r\n\r\nimport './styles.css'\r\n\r\nfunction AdminLogin(props) {\r\n\r\n  const [email, setemail] = useState('')\r\n  const [password, setpassword] = useState('')\r\n\r\n  const admin = useSelector(({ sessionReducer }) => sessionReducer.admin)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (admin)\r\n      props.history.replace('/admin')\r\n  }, [admin])\r\n\r\n  return (\r\n    <div className=\"full-screen-container login-screen\">\r\n      <div className=\"login-logo-container\">\r\n          <img src={logo} alt=\"logo\" />\r\n          <DineMateTitle />\r\n      </div>\r\n      <div className=\"login-container\">\r\n        <div className=\"login-title-container\">\r\n          <Title text=\"Admin Login\" />\r\n        </div>\r\n        <Input \r\n          style={{ width: '80%' }}\r\n          placeholder=\"Enter Email\"\r\n          value={email}\r\n          onChange={({ target: { value } }) => setemail(value)}\r\n        />\r\n        <Input \r\n          style={{ width: '80%' }}\r\n          placeholder=\"Enter Password\"\r\n          value={password}\r\n          onChange={({ target: { value } }) => setpassword(value)}\r\n        />\r\n        <div className=\"login-button-container\">\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(customisedAction(SET_TOAST_DISMISSING, true))\r\n              dispatch(customisedAction(ADMIN_SIGN_IN, { email, password }))\r\n            }}\r\n            text=\"Login\"\r\n          />\r\n        </div>\r\n        <Link style={{ marginTop: '10px' }} to=\"/forgotPassword\">Forgot Password ?</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminLogin\r\n","D:\\react js\\DineMate\\client\\src\\views\\Toaster\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\Menu\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\NoRoute\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\Admin\\index.js",["414","415"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Switch, Route, useRouteMatch, Redirect } from 'react-router-dom'\r\nimport orderManagement from './OrderManagement'\r\nimport { customisedAction } from '../../redux/actions'\r\nimport { GET_CATEGORIES, GET_EXISTING_QRS, GET_MENU, GET_RESTAURANT_DASHBOARD } from '../../constants'\r\n\r\nimport SideBar from './SideBar'\r\nimport NavBar from './NavBar'\r\n\r\nimport SuperAdmin from './Dashboard/SuperAdmin'\r\nimport RestaurantAdmin from './Dashboard/RestaurantAdmin'\r\nimport KitchenAdmin from './Dashboard/KitchenAdmin'\r\nimport AddRestaurant from './AddRestaurant'\r\nimport Restaurants from './Restaurants'\r\nimport GenerateQrs from './GenerateQrs'\r\nimport ViewQr from './GenerateQrs/ViewQr'\r\nimport AllUsers from './Users/AllUsers'\r\nimport Tables from './Tables'\r\nimport TableDetails from './Tables/TableDetails'\r\nimport Categories from './Categories'\r\nimport Menu from './Menu'\r\nimport ItemDetails from './Menu/ItemDetails'\r\nimport RestaurantUsers from './Users/RestaurantUsers'\r\nimport Others from './Others'\r\nimport NoRoute from '../NoRoute'\r\n\r\nimport './styles.css'\r\nimport OrderManagement from './OrderManagement'\r\n\r\nfunction Admin(props) {\r\n\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n\r\n  const admin = useSelector(({ sessionReducer }) => sessionReducer.admin)\r\n  const dispatch = useDispatch()\r\n\r\n  const { restaurantId, role } = admin\r\n\r\n  useEffect(() => {\r\n    if (restaurantId) {\r\n      dispatch(customisedAction(GET_RESTAURANT_DASHBOARD, { restaurantId }))\r\n      dispatch(customisedAction(GET_EXISTING_QRS, { restaurantId, noToast: true }))\r\n      dispatch(customisedAction(GET_CATEGORIES, { restaurantId, noToast: true }))\r\n      dispatch(customisedAction(GET_MENU, { restaurantId, noToast: true }))\r\n    }\r\n  }, [restaurantId])\r\n\r\n  const openSidebar = () => {\r\n      setSidebarOpen(true)\r\n  }\r\n\r\n  const closeSidebar = () => {\r\n      setSidebarOpen(false)\r\n  }\r\n\r\n  let { path } = useRouteMatch()\r\n\r\n  props.history.listen(() => closeSidebar())\r\n\r\n  const SuperAdminRoutes = ({ component: Component, ...rest }) => (\r\n      <Route {...rest} render={(props) => (\r\n          role === \"SuperAdmin\" ? \r\n          <Component {...props} /> : <Redirect to={{ pathname: '/admin', state: { from: props.location.pathname } }} />\r\n      )} />\r\n  )\r\n\r\n  const RestaurantAdminRoutes = ({ component: Component, ...rest }) => (\r\n      <Route {...rest} render={(props) => (\r\n          restaurantId && (role !== \"Kitchen\") ? \r\n          <Component {...props} /> : <Redirect to={{ pathname: '/admin', state: { from: props.location.pathname } }} />\r\n      )} />\r\n  )\r\n\r\n  const KitchenAdminRoutes = ({ component: Component, ...rest }) => (\r\n      <Route {...rest} render={(props) => (\r\n          restaurantId ? \r\n          <Component {...props} /> : <Redirect to={{ pathname: '/admin', state: { from: props.location.pathname } }} />\r\n      )} />\r\n  )\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"sidebarContainer\">\r\n        <SideBar admin={admin} sidebarOpen={sidebarOpen} closeSidebar={closeSidebar} />\r\n      </div>\r\n      <div className=\"mainContainer\">\r\n        <NavBar openSidebar={openSidebar} />\r\n        <div className=\"Main\">\r\n          <Switch>\r\n            <Route exact path={path}>\r\n              <Redirect to={`${path}/dashboard`} />\r\n            </Route>\r\n            <Route path={`${path}/dashboard`}>\r\n              <Switch>\r\n                <Route exact path={`${path}/dashboard`}>\r\n                  <Redirect to={restaurantId ? \r\n                    role !== \"Kitchen\" ? `${path}/dashboard/restaurantAdmin`\r\n                      : `${path}/dashboard/kitchenAdmin`\r\n                    : `${path}/dashboard/superAdmin`} />\r\n                </Route>\r\n                <SuperAdminRoutes path={`${path}/dashboard/superAdmin`} component={SuperAdmin} />\r\n                <RestaurantAdminRoutes path={`${path}/dashboard/restaurantAdmin`} component={RestaurantAdmin} />\r\n                <KitchenAdminRoutes path={`${path}/dashboard/kitchenAdmin`} component={KitchenAdmin} />\r\n              </Switch>\r\n            </Route>\r\n            <SuperAdminRoutes path={`${path}/addRestaurant`} component={AddRestaurant} />\r\n            <SuperAdminRoutes path={`${path}/restaurants`} component={Restaurants} />\r\n            <Route path={`${path}/usersManagement`}>\r\n              <Switch>\r\n                <Route exact path={`${path}/usersManagement`}>\r\n                  <Redirect to={restaurantId ? \r\n                    role !== \"Kitchen\" ? `${path}/usersManagement/restaurantUsers`\r\n                      : `${path}`\r\n                    : `${path}/usersManagement/allUsers`} />\r\n                </Route>\r\n                <SuperAdminRoutes path={`${path}/usersManagement/allUsers`} component={AllUsers} />\r\n                <RestaurantAdminRoutes path={`${path}/usersManagement/restaurantUsers`} component={RestaurantUsers} />\r\n              </Switch>\r\n            </Route>\r\n           <RestaurantAdminRoutes path={`${path}/orderManagement`} component={OrderManagement} />\r\n            <Route path={`${path}/qrsManagement`}>\r\n              <Switch>\r\n                <SuperAdminRoutes exact path={`${path}/qrsManagement`} component={GenerateQrs} />\r\n                <SuperAdminRoutes path={`${path}/qrsManagement/viewQr`} component={ViewQr} />\r\n              </Switch>\r\n            </Route>\r\n            <SuperAdminRoutes path={`${path}/editRestaurant`} component={AddRestaurant} />\r\n            <Route path={`${path}/tablesManagement`}>\r\n              <Switch>\r\n                <RestaurantAdminRoutes exact path={`${path}/tablesManagement`} component={Tables} />\r\n                <RestaurantAdminRoutes path={`${path}/tablesManagement/tableDetails`} component={TableDetails} />\r\n              </Switch>\r\n            </Route>\r\n            <RestaurantAdminRoutes path={`${path}/categoriesManagement`} component={Categories} />\r\n            <Route path={`${path}/menuManagement`}>\r\n              <Switch>\r\n                <RestaurantAdminRoutes exact path={`${path}/menuManagement`} component={Menu} />\r\n                <RestaurantAdminRoutes path={`${path}/menuManagement/itemDetails`} component={ItemDetails} />\r\n                <RestaurantAdminRoutes path={`${path}/menuManagement/addFoodItem`} component={AddRestaurant} />\r\n              </Switch>\r\n            </Route>\r\n            <KitchenAdminRoutes path={`${path}/others`} component={Others} />\r\n            {restaurantId ?\r\n              <SuperAdminRoutes component={NoRoute} />\r\n              : <RestaurantAdminRoutes component={NoRoute} />\r\n            }\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Admin\r\n","D:\\react js\\DineMate\\client\\src\\views\\Restaurants\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\ForgotPassword\\index.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\reducers\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\CreatePassword\\index.js",["416"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport { customisedAction } from '../../redux/actions'\r\nimport { CREATE_PASSWORD, SET_TOAST_DISMISSING } from '../../constants'\r\n\r\nimport { DineMateTitle, Title, Input, Button } from '../../components'\r\n\r\nimport logo from '../../assets/logo.png'\r\n\r\nfunction CreatePassword(props) {\r\n  \r\n  const [password, setpassword] = useState('')\r\n\r\n  const admin = useSelector(({ sessionReducer }) => sessionReducer.admin)\r\n  const dispatch = useDispatch()\r\n\r\n  let { restaurantId, email, hashString } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (admin)\r\n      props.history.replace('/admin')\r\n  }, [admin])\r\n\r\n  return (\r\n    <div className=\"full-screen-container login-screen\">\r\n      <div className=\"login-logo-container\">\r\n          <img src={logo} alt=\"logo\" />\r\n          <DineMateTitle />\r\n      </div>\r\n      <div className=\"login-container\">\r\n        <div className=\"login-title-container\">\r\n          <Title text=\"Create Password\" />\r\n        </div>\r\n        <div style={{ width: '80%' }}>\r\n          <h4>Restaurant ID:</h4>\r\n          <p style={{ marginBottom: '10px' }}>{restaurantId}</p>\r\n          <h4>Email:</h4>\r\n          <p style={{ marginBottom: '5px' }}>{email}</p>\r\n        </div>\r\n        <Input \r\n          style={{ width: '80%' }}\r\n          placeholder=\"Enter Password\"\r\n          value={password}\r\n          onChange={({ target: { value } }) => setpassword(value)}\r\n        />\r\n        <div className=\"login-button-container\">\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(customisedAction(SET_TOAST_DISMISSING, true))\r\n              dispatch(customisedAction(CREATE_PASSWORD, { restaurantId, email, password, hashString }))\r\n            }}\r\n            text=\"Submit\"\r\n          />\r\n        </div>\r\n        <Link style={{ marginTop: '10px' }} to=\"/adminLogin\">Go to Login ?</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreatePassword\r\n","D:\\react js\\DineMate\\client\\src\\redux\\epics\\index.js",[],"D:\\react js\\DineMate\\client\\src\\services\\network\\index.js",[],"D:\\react js\\DineMate\\client\\src\\constants\\Apis.js",[],"D:\\react js\\DineMate\\client\\src\\constants\\Actions.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\reducers\\restaurantReducer.js",["417"],"import {\r\n  GET_EXISTING_QRS,\r\n  GET_EXISTING_QRS_SUCCESS,\r\n  GET_EXISTING_QRS_FAILURE,\r\n  RESTAURANT_CHANGED,\r\n  RESET_RESTAURANT,\r\n  GENERATE_QRS,\r\n  GENERATE_QRS_SUCCESS,\r\n  GENERATE_QRS_FAILURE,\r\n  SET_TABLE_NAME,\r\n  SET_TABLE_NAME_FAILURE\r\n} from '../../constants'\r\n\r\nexport default (state = { fetchingQrs: false, generatingQrs: false, qrs: null, settingTableName: false }, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_EXISTING_QRS:\r\n      return { ...state, fetchingQrs: true, settingTableName: false }\r\n    case GET_EXISTING_QRS_SUCCESS:\r\n      return { ...state, fetchingQrs: false, qrs: payload }\r\n    case GET_EXISTING_QRS_FAILURE:\r\n      return { ...state, fetchingQrs: false }\r\n    case GENERATE_QRS:\r\n      return { ...state, generatingQrs: true }\r\n    case GENERATE_QRS_SUCCESS:\r\n      return { ...state, generatingQrs: false, fetchingQrs: true }\r\n    case GENERATE_QRS_FAILURE:\r\n      return { ...state, generatingQrs: false }\r\n    case RESTAURANT_CHANGED:\r\n      return { ...state, qrs: null }\r\n    case RESET_RESTAURANT:\r\n      return { ...state, qrs: null }\r\n    case SET_TABLE_NAME:\r\n      return { ...state, settingTableName: true }\r\n    case SET_TABLE_NAME_FAILURE:\r\n      return { ...state, settingTableName: false }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\react js\\DineMate\\client\\src\\redux\\reducers\\sessionReducer.js",["418"],"import { \r\n  SET_SESSION, SESSION_CHECK_DONE,\r\n  ADMIN_LOGOUT,\r\n  SET_RESTAURANT, RESET_RESTAURANT,\r\n  GET_SUPER_ADMIN_DASHBOARD, GET_SUPER_ADMIN_DASHBOARD_SUCCESS, GET_SUPER_ADMIN_DASHBOARD_FAILURE\r\n} from '../../constants'\r\n\r\nexport default (state = { checkingSignIn: true,\r\n  admin: null, fetchingDashboard: false, adminDashboard: null\r\n}, { type, payload }) => {\r\n  switch (type) {\r\n    case SET_SESSION:\r\n      return { ...state, checkingSignIn: false, admin: payload.admin }\r\n    case SESSION_CHECK_DONE:\r\n      return { ...state, checkingSignIn: false }\r\n    case ADMIN_LOGOUT:\r\n      return { ...state, admin: null }\r\n    case SET_RESTAURANT: {\r\n      const newAdmin = state.admin\r\n      newAdmin.restaurantId = payload.restaurantId\r\n      newAdmin.restaurantName = payload.restaurantName\r\n      return { ...state, admin: newAdmin }\r\n    }\r\n    case RESET_RESTAURANT: {\r\n      const newAdmin = state.admin\r\n      newAdmin.restaurantId = null\r\n      newAdmin.restaurantName = null\r\n      return { ...state, admin: newAdmin }\r\n    }\r\n    case GET_SUPER_ADMIN_DASHBOARD:\r\n      return { ...state, fetchingDashboard: true }\r\n    case GET_SUPER_ADMIN_DASHBOARD_SUCCESS:\r\n      return { ...state, fetchingDashboard: false, adminDashboard: payload }\r\n    case GET_SUPER_ADMIN_DASHBOARD_FAILURE:\r\n      return { ...state, fetchingDashboard: false }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\react js\\DineMate\\client\\src\\constants\\Data.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\reducers\\dashboardReducer.js",["419"],"import { \r\n  RESET_RESTAURANT,\r\n  GET_RESTAURANT_DASHBOARD, GET_RESTAURANT_DASHBOARD_SUCCESS, GET_RESTAURANT_DASHBOARD_FAILURE,\r\n  MERGE_TABLES, MERGE_TABLES_FAILURE,\r\n  UN_MERGE_TABLES, UN_MERGE_TABLES_FAILURE,\r\n  GET_SERVICES_QUE, GET_SERVICES_QUE_SUCCESS, GET_SERVICES_QUE_FAILURE\r\n} from '../../constants'\r\n\r\nexport default (state = {\r\n  fetchingDashboard: false,\r\n  restaurantDashboard: null,\r\n  mergingTables: false,\r\n  unMergingTables: false,\r\n  fetchingServicesQue: false,\r\n  servicesQue: null,\r\n}, { type, payload }) => {\r\n  switch (type) {\r\n    case RESET_RESTAURANT:\r\n      return { ...state, restaurantDashboard: null }\r\n\r\n    case GET_RESTAURANT_DASHBOARD:\r\n      return { ...state, fetchingDashboard: true, mergingTables: false, unMergingTables: false }\r\n    case GET_RESTAURANT_DASHBOARD_SUCCESS:\r\n      return { ...state, fetchingDashboard: false, restaurantDashboard: payload }\r\n    case GET_RESTAURANT_DASHBOARD_FAILURE:\r\n      return { ...state, fetchingDashboard: false }\r\n\r\n    case MERGE_TABLES:\r\n      return { ...state, mergingTables: true }\r\n    case MERGE_TABLES_FAILURE:\r\n      return { ...state, mergingTables: false }\r\n\r\n    case UN_MERGE_TABLES:\r\n      return { ...state, unMergingTables: true }\r\n    case UN_MERGE_TABLES_FAILURE:\r\n      return { ...state, unMergingTables: false }\r\n\r\n    case GET_SERVICES_QUE:\r\n      return { ...state, fetchingServicesQue: true }\r\n    case GET_SERVICES_QUE_SUCCESS:\r\n      return { ...state, fetchingServicesQue: false, servicesQue: payload }\r\n    case GET_SERVICES_QUE_FAILURE:\r\n      return { ...state, fetchingServicesQue: false }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\react js\\DineMate\\client\\src\\redux\\reducers\\toastReducer.js",["420"],"D:\\react js\\DineMate\\client\\src\\redux\\reducers\\restaurantsReducer.js",["421"],"import {\r\n  GET_ALL_RESTAURANTS,\r\n  GET_ALL_RESTAURANTS_SUCCESS,\r\n  GET_ALL_RESTAURANTS_FAILURE,\r\n  ADD_RESTAURANT,\r\n  ADD_RESTAURANT_SUCCESS,\r\n  ADD_RESTAURANT_FAILURE\r\n} from '../../constants'\r\n\r\nexport default (state = {\r\n  fetchingRestaurants: false,\r\n  addingUpdatingRestaurant: false,\r\n  restaurants: null\r\n}, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_ALL_RESTAURANTS:\r\n      return { ...state, fetchingRestaurants: true }\r\n    case GET_ALL_RESTAURANTS_SUCCESS:\r\n      return { ...state, fetchingRestaurants: false, restaurants: payload.restaurants }\r\n    case GET_ALL_RESTAURANTS_FAILURE:\r\n      return { ...state, fetchingRestaurants: false }\r\n    case ADD_RESTAURANT:\r\n      return { ...state, addingUpdatingRestaurant: true }\r\n    case ADD_RESTAURANT_SUCCESS:\r\n      return { ...state, addingUpdatingRestaurant: false }\r\n    case ADD_RESTAURANT_FAILURE:\r\n      return { ...state, addingUpdatingRestaurant: false }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\react js\\DineMate\\client\\src\\redux\\reducers\\categoriesReducer.js",["422"],"import {\r\n  GET_CATEGORIES,\r\n  GET_CATEGORIES_SUCCESS,\r\n  GET_CATEGORIES_FAILURE,\r\n  ADD_CATEGORY,\r\n  ADD_CATEGORY_FAILURE,\r\n  UPDATE_CATEGORY,\r\n  UPDATE_CATEGORY_FAILURE,\r\n  DELETE_CATEGORY,\r\n  DELETE_CATEGORY_FAILURE,\r\n  RESET_RESTAURANT\r\n} from '../../constants'\r\n\r\nexport default (state = { \r\n  fetchingCategories: false,\r\n  addingCategory: false,\r\n  updatingCategory: false,\r\n  deletingCategory: false,\r\n  categories: null\r\n}, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_CATEGORIES:\r\n      return { ...state, fetchingCategories: true, addingCategory: false, updatingCategory: false, deletingCategory: false }\r\n    case GET_CATEGORIES_SUCCESS:\r\n      return { ...state, fetchingCategories: false, categories: payload }\r\n    case GET_CATEGORIES_FAILURE:\r\n      return { ...state, fetchingCategories: false, categories: null }\r\n    case ADD_CATEGORY:\r\n      return { ...state, addingCategory: true }\r\n    case ADD_CATEGORY_FAILURE:\r\n      return { ...state, addingCategory: false }\r\n    case UPDATE_CATEGORY:\r\n      return { ...state, updatingCategory: true }\r\n    case UPDATE_CATEGORY_FAILURE:\r\n      return { ...state, updatingCategory: false }\r\n    case DELETE_CATEGORY:\r\n      return { ...state, deletingCategory: true }\r\n    case DELETE_CATEGORY_FAILURE:\r\n      return { ...state, deletingCategory: false }\r\n    case RESET_RESTAURANT:\r\n      return { ...state, categories: null }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\react js\\DineMate\\client\\src\\redux\\reducers\\menuReducer.js",["423"],"import {\r\n  GET_MENU,\r\n  GET_MENU_SUCCESS,\r\n  GET_MENU_FAILURE,\r\n  ADD_MENU,\r\n  ADD_MENU_FAILURE,\r\n  RESET_RESTAURANT\r\n} from '../../constants'\r\n\r\nexport default (state = { \r\n  fetchingMenu: false,\r\n  addingMenu: false,\r\n  menu: null\r\n}, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_MENU:\r\n      return { ...state, fetchingMenu: true, addingMenu: false }\r\n    case GET_MENU_SUCCESS:\r\n      return { ...state, fetchingMenu: false, menu: payload }\r\n    case GET_MENU_FAILURE:\r\n      return { ...state, fetchingMenu: false, menu: null }\r\n    case ADD_MENU:\r\n      return { ...state, addingMenu: true }\r\n    case ADD_MENU_FAILURE:\r\n      return { ...state, addingMenu: false }\r\n    case RESET_RESTAURANT:\r\n      return { ...state, menu: null }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\react js\\DineMate\\client\\src\\redux\\reducers\\usersReducer.js",["424"],"import {\r\n  GET_USERS,\r\n  GET_USERS_SUCCESS,\r\n  GET_USERS_FAILURE,\r\n  ADD_USER,\r\n  ADD_USER_FAILURE,\r\n  UPDATE_USER,\r\n  UPDATE_USER_FAILURE,\r\n  DELETE_USER,\r\n  DELETE_USER_FAILURE,\r\n  SET_RESTAURANT,\r\n  RESET_RESTAURANT\r\n} from '../../constants'\r\n\r\nexport default (state = { \r\n  fetchingUsers: false,\r\n  addingUser: false,\r\n  updatingUser: false,\r\n  deletingUser: false,\r\n  users: null\r\n}, { type, payload }) => {\r\n  switch (type) {\r\n    case GET_USERS:\r\n      return { ...state, fetchingUsers: true, addingUser: false, updatingUser: false, deletingUser: false }\r\n    case GET_USERS_SUCCESS:\r\n      return { ...state, fetchingUsers: false, users: payload }\r\n    case GET_USERS_FAILURE:\r\n      return { ...state, fetchingUsers: false, users: null }\r\n    case ADD_USER:\r\n      return { ...state, addingUser: true }\r\n    case ADD_USER_FAILURE:\r\n      return { ...state, addingUser: false }\r\n    case UPDATE_USER:\r\n      return { ...state, updatingUser: true }\r\n    case UPDATE_USER_FAILURE:\r\n      return { ...state, updatingUser: false }\r\n    case DELETE_USER:\r\n      return { ...state, deletingUser: true }\r\n    case DELETE_USER_FAILURE:\r\n      return { ...state, deletingUser: false }\r\n    case SET_RESTAURANT:\r\n      return { ...state, users: null }\r\n    case RESET_RESTAURANT:\r\n      return { ...state, users: null }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\deleteUserEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\updateCategoryEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\getUsersEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\updateUserEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\deleteCategoryEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\getCategoriesEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\addCategoryEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\mergeTablesEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\getServicesQueEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\getExistingQrsEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\setTableNameEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\unMergeTablesEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\createPasswordEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\addRestaurantEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\generateQrsEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\getMenuEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\getAllRestaurantsEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\forgotPasswordEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\getRestaurantDashboardEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\getSuperAdminDashboardEpic.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\loginEpic.js",[],"D:\\react js\\DineMate\\client\\src\\helpers\\dateTime\\index.js",[],"D:\\react js\\DineMate\\client\\src\\helpers\\localStorage\\index.js",[],"D:\\react js\\DineMate\\client\\src\\helpers\\general\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\Admin\\SideBar\\index.js",["425"],"import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link, useRouteMatch, withRouter } from 'react-router-dom'\r\n\r\nimport { DineMateTitle, SmallButtonRed } from '../../../components'\r\n\r\nimport logo from '../../../assets/logo.png'\r\nimport './styles.css'\r\nimport { customisedAction } from '../../../redux/actions'\r\nimport { RESET_RESTAURANT } from '../../../constants'\r\n\r\nfunction SideBar(props) {\r\n    \r\n    const dispatch = useDispatch()\r\n    let { url } = useRouteMatch()\r\n    const { admin, sidebarOpen, closeSidebar, location } = props\r\n    const { pathname } = location\r\n\r\n    const { restaurantId, role } = admin\r\n\r\n    return (<div className={sidebarOpen ? \"sidebar-responsive\" : \"\"} id=\"sidebar\">\r\n        <div className=\"sidebar__title\">\r\n            <div className=\"sidebar__img\">\r\n                <img src={logo} alt=\"logo\" />\r\n                <DineMateTitle/>\r\n            </div>\r\n            <i className=\"fa fa-times\" id=\"sidebarIcon\" onClick={() => closeSidebar()}/>\r\n        </div>\r\n\r\n        <div className=\"sidebar__menu\">\r\n            <div className={`sidebar__link ${pathname.includes('/dashboard') ? 'active_menu_link' : null}`}>\r\n                <i className=\"fa fa-home\"/>\r\n                <Link to={`${url}`}>Dashboard</Link>\r\n            </div>\r\n            {!restaurantId ?\r\n                <>\r\n                    <h2>Super Admin</h2>\r\n                    <div className={`sidebar__link ${pathname.includes('/addRestaurant') ? 'active_menu_link' : null}`}>\r\n                        <i className=\"fa fa-plus\"/>\r\n                        <Link to={`${url}/addRestaurant`}>Add Restaurants</Link>\r\n                    </div>\r\n                    <div className={`sidebar__link ${pathname.includes('/restaurants') ? 'active_menu_link' : null}`}>\r\n                        <i className=\"fa fa-cutlery\"/>\r\n                        <Link to={`${url}/restaurants`}>Restaurants Management</Link>\r\n                    </div>\r\n                    <div className={`sidebar__link ${pathname.includes('/usersManagement') ? 'active_menu_link' : null}`}>\r\n                        <i className=\"fa fa-user\" />\r\n                        <Link to={`${url}/usersManagement`}>Users Management</Link>\r\n                    </div>\r\n                    <div className={`sidebar__link sidebar_disabled_link ${pathname.includes('/editRestaurant') ? 'active_menu_link' : null}`}>\r\n                        <i className=\"fa fa-edit\"/>\r\n                        <Link to={pathname}>Edit Restaurant</Link>\r\n                    </div>\r\n                    <div className={`sidebar__link sidebar_disabled_link ${pathname.includes('/qrsManagement') ? 'active_menu_link' : null}`}>\r\n                        <i className=\"fa fa-qrcode\"/>\r\n                        <Link to={pathname}>QRs Management</Link>\r\n                    </div>\r\n                </> :\r\n                <>\r\n                    {role === \"SuperAdmin\" || role === \"Admin\" ? <>\r\n                        <h2>Restaurant Admin</h2>\r\n                        <div className={`sidebar__link ${pathname.includes('/tablesManagement') ? 'active_menu_link' : null}`}>\r\n                            <i className=\"fa fa-building-o\" />\r\n                            <Link to={`${url}/tablesManagement`}>Tables Management</Link>\r\n                        </div>\r\n                        <div className={`sidebar__link ${pathname.includes('/categoriesManagement') ? 'active_menu_link' : null}`}>\r\n                            <i className=\"fa fa-list\" />\r\n                            <Link to={`${url}/categoriesManagement`}>Categories Management</Link>\r\n                        </div>\r\n                        <div className={`sidebar__link ${pathname.includes('/menuManagement') ? 'active_menu_link' : null}`}>\r\n                            <i className=\"fa fa-cutlery\" />\r\n                            <Link to={`${url}/menuManagement`}>Menu Management</Link>\r\n                        </div>\r\n                        <div className={`sidebar__link ${pathname.includes('/usersManagement') ? 'active_menu_link' : null}`}>\r\n                            <i className=\"fa fa-users\" />\r\n                            <Link to={`${url}/usersManagement`}>Users Management</Link>\r\n                        </div>\r\n                        </> : <h2>Kitchen Admin</h2>\r\n                    }\r\n                    <div className=\"sidebar__link\">\r\n                        <i className=\"fa fa-archive\" />\r\n                        <Link to={`${url}/orderManagement`}>Order Management</Link>\r\n                    </div>\r\n                    <div className=\"sidebar__link\">\r\n                        <i className=\"fa fa-handshake-o\" />\r\n                        <Link to={`${url}/adc`}>Contracts</Link>\r\n                    </div>\r\n                    <div className=\"sidebar__link\">\r\n                        <i className=\"fa fa-question\" />\r\n                        <Link to={`${url}/adc`}>Requests</Link>\r\n                    </div>\r\n                    <div className=\"sidebar__link\">\r\n                        <i className=\"fa fa-files-o\" />\r\n                        <Link to={`${url}/adc`}>Apply for Leaves</Link>\r\n                    </div>\r\n                    <div className={`sidebar__link ${pathname.includes('/others') ? 'active_menu_link' : null}`}>\r\n                        <i className=\"fa fa-wrench\" />\r\n                        <Link to={`${url}/others`}>Settings</Link>\r\n                    </div>\r\n                    {admin.role === \"SuperAdmin\" ?\r\n                        <div className=\"LeaveButtonContainer\">\r\n                            <SmallButtonRed\r\n                                text=\"Leave Restaurant\"\r\n                                iconLeft={<i className=\"fa fa-backward\" />}\r\n                                onClick={() => {\r\n                                    dispatch(customisedAction(RESET_RESTAURANT))\r\n                                    props.history.push('/admin')\r\n                                }}/>\r\n                        </div>\r\n                    : null}\r\n                </>\r\n            }\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default withRouter(SideBar)\r\n","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Restaurants\\index.js",["426","427"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { customisedAction } from '../../../redux/actions'\r\nimport { GET_ALL_RESTAURANTS } from '../../../constants'\r\n\r\nimport { Button, Input } from '../../../components'\r\n\r\nimport RestaurantsList from './RestaurantsList'\r\n\r\nfunction Restaurants(props) {\r\n\r\n  const [restaurantsFetchCalled, setrestaurantsFetchCalled] = useState(false)\r\n  const [filterKey, setfilterKey] = useState('')\r\n\r\n  const fetchingRestaurants = useSelector(({ restaurantsReducer }) => restaurantsReducer.fetchingRestaurants)\r\n  const restaurants = useSelector(({ restaurantsReducer }) => restaurantsReducer.restaurants)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (!restaurantsFetchCalled && !fetchingRestaurants && !restaurants) {\r\n      setrestaurantsFetchCalled(true)\r\n      dispatch(customisedAction(GET_ALL_RESTAURANTS))\r\n    }\r\n  }, [])\r\n\r\n  const getFilteredList = () => {\r\n    let filteredRestaurants = restaurants\r\n    if (filterKey && filterKey.length && restaurants) {\r\n      filteredRestaurants = restaurants.filter(\r\n        (restaurant) => restaurant.restaurantName.toLowerCase().includes(filterKey.toLowerCase())\r\n        || restaurant.restaurantId.toLowerCase().includes(filterKey.toLowerCase())\r\n        || restaurant.cuisine.toLowerCase().includes(filterKey.toLowerCase())\r\n        || restaurant.city.toLowerCase().includes(filterKey.toLowerCase())\r\n        || restaurant.qrCounts == filterKey\r\n      )\r\n    }\r\n    return filteredRestaurants\r\n  }\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      <h2>Restaurants Management</h2>\r\n      <div className=\"TopOptionsContainer\">\r\n        <div className=\"TopInputContainer\">\r\n          <Input \r\n            placeholder=\"Search Restaurants (by Name, Cuisine, City or Qr counts)\"\r\n            value={filterKey}\r\n            onChange={({ target: { value } }) => setfilterKey(value)}\r\n          />\r\n        </div>\r\n        <div className=\"TopButtonContainer\">\r\n          <Button\r\n            text={filterKey ? \"Clear\" : fetchingRestaurants ? \"Syncing\" : \"Refresh\"}\r\n            light={fetchingRestaurants}\r\n            lightAction={() => null}\r\n            iconLeft={<i className={`fa fa-${filterKey ? 'times-circle' : fetchingRestaurants ? 'refresh fa-pulse' : 'refresh'}`} />}\r\n            onClick={() => filterKey ? setfilterKey('') : dispatch(customisedAction(GET_ALL_RESTAURANTS))} />\r\n        </div>\r\n      </div>\r\n      {fetchingRestaurants && !restaurants ?\r\n        <div className=\"loadingContainer\">\r\n          <p><i className={`fa fa-refresh ${fetchingRestaurants ? 'fa-pulse' : ''}`} style={{ padding: '0px 5px' }} />Fetching / Syncing Restaurants . . .</p>\r\n        </div> : null\r\n      }\r\n      <RestaurantsList history={props.history} restaurants={getFilteredList()} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Restaurants\r\n","D:\\react js\\DineMate\\client\\src\\views\\Admin\\GenerateQrs\\ViewQr\\index.js",["428"],"import React, { useEffect, useState } from 'react'\r\nimport QRCode from \"qrcode.react\";\r\n\r\nimport { CUSTOMER_APP_URL } from '../../../../constants'\r\n\r\nimport { Button } from '../../../../components'\r\nimport './styles.css'\r\n\r\nfunction ViewQr(props) {\r\n\r\n  const [selectedQr, setselectedQr] = useState(null)\r\n\r\n  const { location: { state }, history } = props\r\n\r\n  useEffect(() => {\r\n    if (!state) {\r\n      history.push('/')\r\n    } else {\r\n      setselectedQr(state.qr)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      <h2>View QR</h2>\r\n      <div className=\"QrContainer\">\r\n        <div className=\"QrInnerContainer\" id=\"QrInnerContainer\">\r\n          {selectedQr ? \r\n            <QRCode\r\n              id={selectedQr.id}\r\n              value={CUSTOMER_APP_URL+\"restaurant/\"+selectedQr.value}\r\n              size={200}\r\n            /> : null\r\n          }\r\n          <h3 style={{ marginTop: '10px' }}>Dine Mate</h3>\r\n        </div>\r\n      <Button\r\n        style={{ marginTop: '15px' }}\r\n        text=\"Back\"\r\n        iconLeft={<i className=\"fa fa-arrow-circle-left\" />}\r\n        onClick={() => history.goBack()}\r\n      />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ViewQr\r\n","D:\\react js\\DineMate\\client\\src\\views\\Admin\\GenerateQrs\\index.js",["429"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { customisedAction } from '../../../redux/actions'\r\nimport { SET_TOAST, SET_TOAST_DISMISSING, GENERATE_QRS } from '../../../constants'\r\n\r\nimport { Button, Input } from '../../../components'\r\n\r\nimport QrsList from './QrsList'\r\n\r\nfunction GenerateQrs(props) {\r\n  \r\n  const [generateQrInput, setgenerateQrInput] = useState('')\r\n  const [qrCounts, setqrCounts] = useState(0)\r\n\r\n  const generatingQrs = useSelector(({ restaurantReducer }) => restaurantReducer.generatingQrs)\r\n  const fetchingQrs = useSelector(({ restaurantReducer }) => restaurantReducer.fetchingQrs)\r\n  const qrs = useSelector(({ restaurantReducer }) => restaurantReducer.qrs)\r\n  const dispatch = useDispatch()\r\n\r\n  const { location: { state }, history } = props\r\n\r\n  useEffect(() => {\r\n    if (!state || history.action === 'POP') {\r\n      history.goBack()\r\n    } else if (qrs && qrs.length) {\r\n      setqrCounts(qrs.length)\r\n    } else {\r\n      setqrCounts(state.qrCounts)\r\n    }\r\n  }, [qrs])\r\n\r\n  const generateQrs = () => {\r\n    if (!generateQrInput || generateQrInput < 1 || isNaN(generateQrInput)) {\r\n      dispatch(customisedAction(SET_TOAST_DISMISSING, true))\r\n      dispatch(customisedAction(SET_TOAST, { message: 'Input must be a number greater than zero!', type: 'error'}))\r\n    } else {\r\n      const generatedQrData = {\r\n        \"restaurantId\": state.restaurantId,\r\n        values: []\r\n      }\r\n      for (let index = qrCounts; index < Number(qrCounts)+Number(generateQrInput); index++) {\r\n        generatedQrData.values.push(`${state.restaurantId}/${index+1}`)\r\n      }\r\n      setgenerateQrInput('')\r\n      dispatch(customisedAction(GENERATE_QRS, generatedQrData))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      <div className=\"PageTitleContainer\">\r\n        <h2>QRs Management</h2>\r\n        <div className=\"PageTitleButtonContainer\">\r\n          <Button\r\n            text=\"Edit Restaurant\"\r\n            iconLeft={<i className=\"fa fa-edit\" />}\r\n            onClick={() => history.push('/admin/editRestaurant')} />\r\n        </div>\r\n      </div>\r\n      <div className=\"TopOptionsContainer\">\r\n        <div className=\"TopInputContainer\">\r\n          <Input \r\n            placeholder=\"Number of Qrs you want to generate ?\"\r\n            value={generateQrInput}\r\n            onChange={({ target: { value } }) => setgenerateQrInput(value)}\r\n          />\r\n        </div>\r\n        <div className=\"TopButtonContainer\" style={{ justifyContent: 'flex-start' }}>\r\n          <Button\r\n            text=\"Generate\"\r\n            light={generatingQrs || fetchingQrs}\r\n            lightAction={() => null}\r\n            iconLeft={<i className=\"fa fa-plus-circle\" />}\r\n            onClick={() => generateQrs()}\r\n          />\r\n        </div>\r\n      </div>\r\n      {fetchingQrs ?\r\n        <div className=\"loadingContainer\">\r\n          <p><i className={`fa fa-refresh ${fetchingQrs ? 'fa-pulse' : ''}`} style={{ padding: '0px 5px' }} />Fetching / Syncing Qrs!</p>\r\n        </div> : null\r\n      }\r\n      <QrsList restaurantId={state && state.restaurantId} history={history} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GenerateQrs\r\n","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Tables\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\Admin\\Categories\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\Admin\\Menu\\index.js",[],"D:\\react js\\DineMate\\client\\src\\components\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\Admin\\Tables\\TableDetails\\index.js",["430"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport QRCode from \"qrcode.react\";\r\n\r\nimport { CUSTOMER_APP_URL, SET_TABLE_NAME } from '../../../../constants'\r\nimport { customisedAction } from '../../../../redux/actions';\r\nimport { Button, Input } from '../../../../components'\r\nimport './styles.css'\r\n\r\nfunction TableDetails(props) {\r\n\r\n  const [selectedTable, setselectedTable] = useState(null)\r\n  const [tableName, settableName] = useState('')\r\n  \r\n  const settingTableName = useSelector(({ restaurantReducer }) => restaurantReducer.settingTableName)\r\n  const dispatch = useDispatch()\r\n\r\n  const { location: { state }, history } = props\r\n\r\n  useEffect(() => {\r\n    if (!state) {\r\n      history.push('/')\r\n    } else {\r\n      setselectedTable(state.table)\r\n      settableName(state.table.tableName)\r\n    }\r\n  }, [])\r\n\r\n  const downloadQR = () => {\r\n    const canvas = document.getElementById(selectedTable.id);\r\n    const pngUrl = canvas\r\n      .toDataURL(\"image/png\")\r\n      .replace(\"image/png\", \"image/octet-stream\");\r\n    let downloadLink = document.createElement(\"a\");\r\n    downloadLink.href = pngUrl;\r\n    downloadLink.download = `${selectedTable.value}.png`;\r\n    document.body.appendChild(downloadLink);\r\n    downloadLink.click();\r\n    document.body.removeChild(downloadLink);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      <h2>Table Details</h2>\r\n      {selectedTable ?\r\n        <div className=\"TableContainer\">\r\n          <div className=\"TableDetailsContainer\">\r\n            <div className=\"TableDetailsSections\">\r\n              <h4>Restaurant ID:</h4>\r\n              <p>{state.restaurantId}</p>\r\n            </div>\r\n            <div className=\"TableDetailsSections\">\r\n              <h4>Status:</h4>\r\n              <p>{selectedTable.active ? 'Active' : 'In-Active'}</p>\r\n            </div>\r\n            <div className=\"TableDetailsSections\">\r\n              <h4>Table No:</h4>\r\n              <p>\r\n                {selectedTable.value.replace(`${state.restaurantId}/`, '').length === 1 ? '0' : null}\r\n                {selectedTable.value.replace(`${state.restaurantId}/`, '')}\r\n              </p>\r\n            </div>\r\n            <div className=\"TableDetailsSections\">\r\n              <h4>Table Name:</h4>\r\n              <div className=\"TableNameContainer\">\r\n                <Input\r\n                  style={{ margin: '0px' }}\r\n                  placeholder=\"Enter Table Name\"\r\n                  value={tableName}\r\n                  onChange={({ target: { value } }) => settableName(value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"TableNameButtonContainer\">\r\n              {tableName && tableName !== selectedTable.tableName ?\r\n                <Button\r\n                  text=\"Update\"\r\n                  light={settingTableName}\r\n                  lightAction={() => null}\r\n                  iconLeft={<i className=\"fa fa-check-circle\" />}\r\n                  onClick={() => dispatch(customisedAction(SET_TABLE_NAME, { \r\n                    id: selectedTable.id, \r\n                    tableName, \r\n                    restaurantId: state.restaurantId,\r\n                    history\r\n                  }))}\r\n                />\r\n              : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"QrInnerContainer\">\r\n            <QRCode\r\n              id={selectedTable.id}\r\n              value={CUSTOMER_APP_URL+\"restaurant/\"+selectedTable.value}\r\n              size={200}\r\n            />\r\n          </div>\r\n        </div>\r\n      : null}\r\n      <Button\r\n        style={{ width: '100%', marginTop: '15px' }}\r\n        text=\"Back\"\r\n        light\r\n        lightAction={() => history.goBack()}\r\n        iconLeft={<i className=\"fa fa-arrow-circle-left\" />}\r\n      />\r\n      <Button\r\n        style={{ width: '100%', marginTop: '15px' }}\r\n        text=\"Download\"\r\n        iconLeft={<i className=\"fa fa-download\" />}\r\n        onClick={() => downloadQR()}\r\n      />\r\n      <Button\r\n        style={{ width: '100%', marginTop: '15px', marginBottom: '15px' }}\r\n        text=\"Print\"\r\n        light\r\n        lightAction={() => window.print()}\r\n        iconLeft={<i className=\"fa fa-print\" />}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TableDetails\r\n","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Others\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\Admin\\Menu\\ItemDetails\\index.js",["431","432","433"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Separator } from '../../../../components'\r\nimport { getNameById } from '../../../../helpers'\r\n\r\nimport AddOnsList from '../AddOnsList'\r\nimport './styles.css'\r\n\r\nfunction ItemDetails(props) {\r\n\r\n  const [selectedItem, setselectedItem] = useState(null)\r\n\r\n  const fetchingCategories = useSelector(({ categoriesReducer }) => categoriesReducer.fetchingCategories)\r\n  const categories = useSelector(({ categoriesReducer }) => categoriesReducer.categories)\r\n  \r\n  const dispatch = useDispatch()\r\n\r\n  const { location: { state }, history } = props\r\n\r\n  useEffect(() => {\r\n    if (!state)\r\n      history.goBack()\r\n    else {\r\n      setselectedItem(state.item)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      <h2>Food Item Details</h2>\r\n      {selectedItem ? <>\r\n        <div className=\"ItemContainer\">\r\n          <div className=\"ItemDetailsContainer\">\r\n            <div className=\"ItemDetailsSections\">\r\n              <h4>Item Name:</h4>\r\n              <p>{selectedItem.name}</p>\r\n            </div>\r\n            <div className=\"ItemDetailsSections\">\r\n              <h4>Short  Description:</h4>\r\n              <p>{selectedItem.shortDescription || '-'}</p>\r\n            </div>\r\n            <div className=\"ItemDetailsSections\">\r\n              <h4>Price:</h4>\r\n              <p>$ {selectedItem.price}</p>\r\n            </div>\r\n            <div className=\"ItemDetailsSections\">\r\n              <h4>Category:</h4>\r\n              <p>{!fetchingCategories && categories ?\r\n                  getNameById(categories, selectedItem.categoryId)\r\n                : 'No Category'\r\n              }</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"ItemImageContainer\">\r\n            Image\r\n          </div>\r\n        </div>\r\n        <div className=\"ItemDetailsSections\">\r\n          <h4>Add-Ons:</h4>\r\n        </div>\r\n        <AddOnsList addOns={selectedItem.addOns} />\r\n      </> : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ItemDetails\r\n","D:\\react js\\DineMate\\client\\src\\views\\Admin\\NavBar\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\Admin\\Dashboard\\SuperAdmin\\index.js",["434"],"import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { Button, DashboardBatches } from '../../../../components'\r\nimport { GET_SUPER_ADMIN_DASHBOARD } from '../../../../constants'\r\nimport { customisedAction } from '../../../../redux/actions'\r\n\r\nimport '../styles.css'\r\n\r\nfunction SuperAdmin(props) {\r\n\r\n  const fetchingDashboard = useSelector(({ sessionReducer }) => sessionReducer.fetchingDashboard)\r\n  const adminDashboard = useSelector(({ sessionReducer }) => sessionReducer.adminDashboard)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (!adminDashboard)\r\n      dispatch(customisedAction(GET_SUPER_ADMIN_DASHBOARD))\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      <div className=\"PageTitleContainer\">\r\n        <h2>Dashboard</h2>\r\n        <div className=\"PageTitleButtonContainer\">\r\n          <Button\r\n            text={fetchingDashboard ? \"Syncing\" : \"Refresh\"}\r\n            light={fetchingDashboard}\r\n            lightAction={() => null}\r\n            iconLeft={<i className={`fa fa-refresh ${fetchingDashboard ? 'fa-pulse' : ''}`} />}\r\n            onClick={() => dispatch(customisedAction(GET_SUPER_ADMIN_DASHBOARD))} />\r\n        </div>\r\n      </div>\r\n      <div className=\"DashBoardContainer\">\r\n        {fetchingDashboard ?\r\n          <div className=\"loadingContainer\">\r\n            <p><i className={`fa fa-refresh ${fetchingDashboard ? 'fa-pulse' : ''}`} style={{ padding: '0px 5px' }} />Fetching / Syncing Dashboard Data . . .</p>\r\n          </div> : null\r\n        }\r\n        {adminDashboard ? <>\r\n          <div className=\"DashBoardSectionsContainer\">\r\n            <DashboardBatches\r\n              text={`${adminDashboard.restaurants} Restaurants`}\r\n              iconName=\"fa fa-cutlery\"\r\n              onClick={() => props.history.push('/admin/restaurants')}\r\n            />\r\n            <DashboardBatches\r\n              text={`${adminDashboard.admins} Admins`}\r\n              iconName=\"fa fa-user\"\r\n              onClick={() => null}\r\n            />\r\n          </div>\r\n          <div className=\"DashBoardSectionsContainer\">\r\n            <DashboardBatches\r\n              text={`${adminDashboard.qrs} QRs`}\r\n              iconName=\"fa fa-qrcode\"\r\n              onClick={() => null}\r\n            />\r\n          </div>\r\n        </> : null}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SuperAdmin\r\n","D:\\react js\\DineMate\\client\\src\\views\\Admin\\AddRestaurant\\index.js",["435","436","437"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { customisedAction } from '../../../redux/actions'\r\nimport { SET_TOAST, SET_TOAST_DISMISSING, ADD_RESTAURANT } from '../../../constants'\r\n\r\nimport { Button, Input, SectionHeading, SmallTitle } from '../../../components'\r\nimport './styles.css'\r\nimport { capitalizeFirstLetter } from '../../../helpers'\r\n\r\nfunction AddRestaurant(props) {\r\n\r\n  const [restaurantId, setrestaurantId] = useState('')\r\n  const [restaurantName, setrestaurantName] = useState('')\r\n  const [cuisine, setcuisine] = useState('')\r\n  const [address, setaddress] = useState('')\r\n  const [city, setcity] = useState('')\r\n  const [country, setcountry] = useState('')\r\n  const [latitude, setlatitude] = useState('')\r\n  const [longitude, setlongitude] = useState('')\r\n  const [pName, setpName] = useState('')\r\n  const [pEmail, setpEmail] = useState('')\r\n  const [pPhoneNumber, setpPhoneNumber] = useState('')\r\n  const [sName, setsName] = useState('')\r\n  const [sEmail, setsEmail] = useState('')\r\n  const [sPhoneNumber, setsPhoneNumber] = useState('')\r\n\r\n  const addingUpdatingRestaurant = useSelector(({ restaurantsReducer }) => restaurantsReducer.addingUpdatingRestaurant)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    const { pathname, state } = props.location\r\n    if (pathname.includes('/editRestaurant')) {\r\n      if (!state) props.history.push('/')\r\n    }\r\n  }, [])\r\n\r\n  const setRestaurantNameAndId = (name) => {\r\n    let tempRestaurantId\r\n    if (name)\r\n      tempRestaurantId = name.replaceAll(' ', '_').replaceAll('\\'', '').replaceAll(',', '').replaceAll('.', '')\r\n    else tempRestaurantId = null\r\n\r\n    if (tempRestaurantId && tempRestaurantId.replaceAll('_', '')) {\r\n      setrestaurantName(name)\r\n      setrestaurantId(tempRestaurantId.toLowerCase())\r\n    } else {\r\n      setrestaurantName('')\r\n      setrestaurantId('')\r\n    }\r\n  }\r\n\r\n  const validate = () => {\r\n    if (!restaurantName)\r\n      return 'Restaurant Name Required!'\r\n    if (!cuisine)\r\n      return 'Restaurant Cuisine Required!'\r\n    if (!city)\r\n      return 'Restaurant City Required!'\r\n    if (!country)\r\n      return 'Restaurant Country Required!'\r\n    if (!address)\r\n      return 'Detailed Address Required!'\r\n    if (!pName)\r\n      return 'Primary Contact Name Required!'\r\n    if (!pEmail)\r\n      return 'Primary Contact Email Required!'\r\n    if (!pPhoneNumber)\r\n      return 'Primary Contact Number Required!'\r\n    if (sEmail && !sName)\r\n      return 'Secondary Contact Name Required!'\r\n    if (sName && !sEmail)\r\n      return 'Secondary Contact Email Required!'\r\n    return false\r\n  }\r\n\r\n  const addRestuarant = () => {\r\n    const payload = {\r\n      restaurantId,\r\n      restaurantName,\r\n      cuisine: capitalizeFirstLetter(cuisine),\r\n      address: {\r\n        address,\r\n        city,\r\n        country,\r\n        latitude,\r\n        longitude\r\n      },\r\n      primaryContact: {\r\n        name: pName,\r\n        email: pEmail,\r\n        contactNumber: pPhoneNumber\r\n      },\r\n      secondaryContact: null\r\n    }\r\n    if (sName && sEmail) {\r\n      payload.secondaryContact = {\r\n        name: sName,\r\n        email: sEmail,\r\n        contactNumber: sPhoneNumber\r\n      }\r\n    }\r\n    dispatch(customisedAction(SET_TOAST_DISMISSING))\r\n    dispatch(customisedAction(ADD_RESTAURANT, payload, { history: props.history }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      <h2>Add Restaurant</h2>\r\n      <div className=\"FormContainer\">\r\n        <div className=\"FormInnerContainer\">\r\n          <SectionHeading text=\"Restaurant Information\" />\r\n          <div className=\"InputsContainer\">\r\n            <div className=\"InputsInnerContainer\">\r\n              <SmallTitle text=\"Name\" />\r\n              <Input \r\n                placeholder=\"Eg. (ABC Restaurant)\"\r\n                value={restaurantName}\r\n                onChange={({ target: { value } }) => setRestaurantNameAndId(value)}\r\n              />\r\n            </div>\r\n            <div className=\"InputsInnerContainer\" style={{ flexDirection: 'row', paddingTop: '0px' }}>\r\n              <div className=\"InputsInnerContainer\" style={{ width: '50%', paddingRight: '7px' }}>\r\n                <SmallTitle text=\"Cuisine\" />\r\n                <Input \r\n                  placeholder=\"Eg. (Traditional)\"\r\n                  value={cuisine}\r\n                  onChange={({ target: { value } }) => setcuisine(value)}\r\n                />\r\n              </div>\r\n              <div className=\"InputsInnerContainer\" style={{ width: '50%', paddingLeft: '7px' }}>\r\n                <SmallTitle text=\"City\" />\r\n                <Input \r\n                  placeholder=\"Eg. (Karachi)\"\r\n                  value={city}\r\n                  onChange={({ target: { value } }) => setcity(value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"InputsInnerContainer\">\r\n              <SmallTitle text=\"Country\" />\r\n              <Input \r\n                placeholder=\"Eg. (Pakistan)\"\r\n                value={country}\r\n                onChange={({ target: { value } }) => setcountry(value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"FormInnerContainer\">\r\n          <SectionHeading text=\"Business Address\" />\r\n          <div className=\"InputsContainer\">\r\n            <div className=\"InputsInnerContainer\">\r\n              <SmallTitle text=\"Map\" />\r\n              <div style={{ marginTop: '10px', width: '100%', height: '140px', background: 'rgba(0, 0, 0, 0.5)' }}/>\r\n            </div>\r\n            <div className=\"InputsInnerContainer\">\r\n              <SmallTitle text=\"Detailed Address\" />\r\n              <Input \r\n                placeholder=\"Eg. (Block - A, Street, State)\"\r\n                value={address}\r\n                onChange={({ target: { value } }) => setaddress(value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"FormContainer\">\r\n        <div className=\"FormInnerContainer\">\r\n          <SectionHeading text=\"Primary Contact Information\" />\r\n          <div className=\"InputsContainer\">\r\n            <div className=\"InputsInnerContainer\">\r\n              <SmallTitle text=\"Name\" />\r\n              <Input \r\n                placeholder=\"Eg. (John Doe)\"\r\n                value={pName}\r\n                onChange={({ target: { value } }) => setpName(value)}\r\n              />\r\n            </div>\r\n            <div className=\"InputsInnerContainer\">\r\n              <SmallTitle text=\"Email\" />\r\n              <Input \r\n                placeholder=\"Eg. (john.doe@abcrestaurant.com)\"\r\n                value={pEmail}\r\n                onChange={({ target: { value } }) => setpEmail(value)}\r\n              />\r\n            </div>\r\n            <div className=\"InputsInnerContainer\">\r\n              <SmallTitle text=\"Phone Number\" />\r\n              <Input \r\n                placeholder=\"Eg. (+92 315 8731014)\"\r\n                value={pPhoneNumber}\r\n                onChange={({ target: { value } }) => setpPhoneNumber(value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"FormInnerContainer\">\r\n          <SectionHeading text=\"Secondary Contact Information (Optional)\" />\r\n          <div className=\"InputsContainer\">\r\n            <div className=\"InputsInnerContainer\">\r\n              <SmallTitle text=\"Name\" />\r\n              <Input \r\n                placeholder=\"Eg. (John Doe)\"\r\n                value={sName}\r\n                onChange={({ target: { value } }) => setsName(value)}\r\n              />\r\n            </div>\r\n            <div className=\"InputsInnerContainer\">\r\n              <SmallTitle text=\"Email\" />\r\n              <Input \r\n                placeholder=\"Eg. (john.doe@abcrestaurant.com)\"\r\n                value={sEmail}\r\n                onChange={({ target: { value } }) => setsEmail(value)}\r\n              />\r\n            </div>\r\n            <div className=\"InputsInnerContainer\">\r\n              <SmallTitle text=\"Phone Number\" />\r\n              <Input \r\n                placeholder=\"Eg. (+92 315 8731014)\"\r\n                value={sPhoneNumber}\r\n                onChange={({ target: { value } }) => setsPhoneNumber(value)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"ButtonContainer\">\r\n        <Button\r\n          text=\"Submit\"\r\n          light={!!validate() || addingUpdatingRestaurant}\r\n          lightAction={() => {\r\n            dispatch(customisedAction(SET_TOAST_DISMISSING))\r\n            dispatch(customisedAction(SET_TOAST, {\r\n            message: validate() || 'Adding restaurant in progress',\r\n            type: validate() ? 'error' : 'success'\r\n          }))}}\r\n          iconLeft={<i className=\"fa fa-paper-plane\" />}\r\n          onClick={() => addRestuarant()}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddRestaurant\r\n","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Dashboard\\RestaurantAdmin\\index.js",["438","439"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { Button, DashboardGridItem, ServiceQueItem } from '../../../../components'\r\nimport { GET_RESTAURANT_DASHBOARD, MERGE_TABLES, SET_TOAST, SET_TOAST_DISMISSING, UN_MERGE_TABLES } from '../../../../constants'\r\nimport { customisedAction } from '../../../../redux/actions'\r\n\r\nfunction RestaurantAdmin() {\r\n\r\n  const [merging, setmerging] = useState(false)\r\n  const [selectedTables, setselectedTables] = useState([])\r\n\r\n  const admin = useSelector(({ sessionReducer }) => sessionReducer.admin)\r\n  const fetchingDashboard = useSelector(({ dashboardReducer }) => dashboardReducer.fetchingDashboard)\r\n  const restaurantDashboard = useSelector(({ dashboardReducer }) => dashboardReducer.restaurantDashboard)\r\n  const mergingTables = useSelector(({ dashboardReducer }) => dashboardReducer.mergingTables)\r\n  const unMergingTables = useSelector(({ dashboardReducer }) => dashboardReducer.unMergingTables)\r\n  const fetchingServicesQue = useSelector(({ dashboardReducer }) => dashboardReducer.fetchingServicesQue)\r\n  const servicesQue = useSelector(({ dashboardReducer }) => dashboardReducer.servicesQue)\r\n  const dispatch = useDispatch()\r\n\r\n  const { restaurantId } = admin\r\n\r\n  useEffect(() => {\r\n    if (!mergingTables)\r\n      cancelMerge()\r\n  }, [mergingTables])\r\n\r\n  const getUnmergedTables = () => {\r\n    let unMergedTables = restaurantDashboard\r\n    if (restaurantDashboard) {\r\n      unMergedTables = restaurantDashboard.filter(\r\n        (table) => !table.mergeId\r\n      )\r\n    }\r\n    getGroupedMergedTables()\r\n    return unMergedTables\r\n  }\r\n\r\n  const getMergedTables = () => {\r\n    let mergedTables = []\r\n    if (restaurantDashboard) {\r\n      mergedTables = restaurantDashboard.filter(\r\n        (table) => table.mergeId\r\n      )\r\n    }\r\n    return mergedTables\r\n  }\r\n\r\n  const getGroupedMergedTables = () => {\r\n    let groupedMergedTables = []\r\n    if (getMergedTables() && getMergedTables().length) {\r\n      groupedMergedTables = getMergedTables().reduce((r, a) => {\r\n        r[a.mergeId] = r[a.mergeId] || [];\r\n        r[a.mergeId].push(a);\r\n        return r;\r\n      }, Object.create(null));\r\n    }\r\n    return groupedMergedTables\r\n  }\r\n\r\n  const getUnmergedColumnCounts = () => {\r\n    let counts = 0\r\n    if (getMergedTables().length) {\r\n      if (getMergedTables().length > 3) counts = 2\r\n      else counts = 1\r\n    }\r\n    return (4 - counts) * 4\r\n  }\r\n\r\n  const getMergedColumnCounts = () => {\r\n    if (getUnmergedColumnCounts() === 12) {\r\n      if (getUnmergedTables().length > 8) return 4\r\n      else if (getUnmergedTables().length > 4) return 3\r\n      else if (getUnmergedTables().length) return 2\r\n      else return 1\r\n    }\r\n    else if (getUnmergedColumnCounts() === 8) {\r\n      if (getUnmergedTables().length > 4) return 3\r\n      else if (getUnmergedTables().length) return 2\r\n      else return 1\r\n    }\r\n  }\r\n\r\n  const getMergedRowCounts = (groupIndex) => {\r\n    let mergedRowCounts = 0, index = groupIndex\r\n    while (index - 2 > -1) {\r\n      index = index - 2\r\n      Object.keys(getGroupedMergedTables()).map((key, currentIndex) => {\r\n        if (currentIndex === index)\r\n          mergedRowCounts = mergedRowCounts + getGroupedMergedTables()[key].length\r\n      })\r\n    }\r\n    return mergedRowCounts\r\n  }\r\n\r\n  const cancelMerge = () => {\r\n    setmerging(false)\r\n    setselectedTables([])\r\n  }\r\n\r\n  const selectTable = (id) => {\r\n    let temp = []\r\n    if (selectedTables.includes(id))\r\n      temp = selectedTables.filter((tableId) => tableId !== id)\r\n    else {\r\n      temp = [...selectedTables]\r\n      temp.push(id)\r\n    }\r\n    setselectedTables(temp)\r\n  }\r\n\r\n  const getTableById = (id) => {\r\n    const tables = restaurantDashboard.filter(table => table.id === id)\r\n    return tables.length && tables[0]\r\n  }\r\n\r\n  const mergeTables = () => {\r\n    dispatch(customisedAction(SET_TOAST_DISMISSING))\r\n    if (selectedTables && selectedTables.length) {\r\n      if (selectedTables.length < 2 || selectedTables.length > 3)\r\n        dispatch(customisedAction(SET_TOAST, { message: 'Select Minimum 2 & Maximum 3 Tables!', type: 'error'}))\r\n      else dispatch(customisedAction(MERGE_TABLES, {\r\n        selectedTables,\r\n        mergeId: getTableById(Math.min(...selectedTables)).value,\r\n        restaurantId\r\n      }))\r\n    } else {\r\n      dispatch(customisedAction(SET_TOAST, { message: 'No Tables Selected!', type: 'error'}))\r\n    }\r\n  }\r\n\r\n  const unMergeTables = (mergeId) => dispatch(customisedAction(UN_MERGE_TABLES, { mergeId, restaurantId }))\r\n\r\n  let column = 1, row, unMergedRowCounts=0\r\n  return (\r\n    <div className=\"Container\">\r\n      <div className=\"PageTitleContainer\">\r\n        <h2>Dashboard</h2>\r\n        <div className=\"PageTitleButtonContainer\">\r\n          {restaurantDashboard ? \r\n            <Button\r\n              text={`${merging ? \"Cancel \" : \"\"}Merge`}\r\n              light={fetchingDashboard || merging || mergingTables || unMergingTables}\r\n              lightAction={() => merging ? cancelMerge() : null}\r\n              iconLeft={<i className={`fa ${merging ? 'fa-times-circle' : 'fa-columns'} fa-rotate-90`} />}\r\n              onClick={() => setmerging(true)} /> : null\r\n          }\r\n          <Button\r\n            style={{ marginLeft: '10px' }}\r\n            text={fetchingDashboard || fetchingServicesQue ? \"Syncing\" : merging ? \"Submit\" : \"Refresh\"}\r\n            light={fetchingDashboard || fetchingServicesQue || mergingTables || unMergingTables}\r\n            lightAction={() => null}\r\n            iconLeft={<i className={`fa ${merging ? 'fa-send' : 'fa-refresh'} ${fetchingDashboard || fetchingServicesQue ? 'fa-pulse' : ''}`} />}\r\n            onClick={() => {\r\n              if (merging) mergeTables()\r\n              else dispatch(customisedAction(GET_RESTAURANT_DASHBOARD, { restaurantId }))\r\n            }} />\r\n        </div>\r\n      </div>\r\n        {fetchingDashboard && !restaurantDashboard ?\r\n          <div className=\"DashBoardContainer\">\r\n            <div className=\"loadingContainer\">\r\n              <p><i className={`fa fa-refresh ${fetchingDashboard ? 'fa-pulse' : ''}`} style={{ padding: '0px 5px' }} />Fetching / Syncing Dashboard Data . . .</p>\r\n            </div>\r\n          </div> : null\r\n        }\r\n      <div className=\"RestaurantDashBoardContainer\">\r\n        {restaurantDashboard ? <>\r\n          <div className=\"DashBoardColumnsContainer\">\r\n            <div className=\"DashBoardGridsContainer\">\r\n              <div className=\"DashBoardGrids\">\r\n                {\r\n                  getUnmergedTables().map((table, index) => {\r\n                    const { id, value, doNotDisturb, occupiedBy } = table\r\n                    if (index > 0 && index % getUnmergedColumnCounts() === 0) {\r\n                      column = 1\r\n                      unMergedRowCounts = unMergedRowCounts + 4\r\n                    }\r\n                    if (index > 0 && index % 4 === 0 && index % getUnmergedColumnCounts() !== 0) column = (Math.floor((index % getUnmergedColumnCounts())/4) % 4)+1\r\n                    row = (index % 4) + unMergedRowCounts + 1\r\n                    return (<div className=\"DashboardGridItemContainer\" key={id}\r\n                      style={{\r\n                        gridColumn: column, gridRow: row, \r\n                        backgroundColor: merging ? occupiedBy ? 'white' : 'rgb(245, 222, 179)' : ''\r\n                      }}>\r\n                        <DashboardGridItem\r\n                          text={\"Table \" + value.replace(`${restaurantId}/`, '')}\r\n                          doNotDisturb={doNotDisturb}\r\n                          occupiedBy={occupiedBy}\r\n                          merging={merging}\r\n                          includesMerging={selectedTables.includes(id)}\r\n                          onClick={() => {\r\n                            if (merging) selectTable(id)\r\n                          }}\r\n                        />\r\n                    </div>)\r\n                  })\r\n                }\r\n                {\r\n                  Object.keys(getGroupedMergedTables()).map((key, groupIndex) => {\r\n                    const mergedTables = getGroupedMergedTables()[key]\r\n                    return mergedTables.map((table, index) => {\r\n                      const { id, value, mergeId } = table\r\n                      return (<div className=\"DashboardGridItemContainer\" key={id}\r\n                        style={{\r\n                          gridColumn: getMergedColumnCounts() + (groupIndex % 2),\r\n                          gridRow: getMergedRowCounts(groupIndex) + index + 1,\r\n                          border: '1px solid black',\r\n                          borderTopLeftRadius: index === 0 ? '10px' : '0px',\r\n                          borderTopRightRadius: index === 0 ? '10px' : '0px',\r\n                          borderBottomLeftRadius: index === mergedTables.length - 1 ? '10px' : '0px',\r\n                          borderBottomRightRadius: index === mergedTables.length - 1 ? '10px' : '0px',\r\n                          borderTop: index === 0 ? '1px solid black' : 'none',\r\n                          borderBottom: index === mergedTables.length - 1 ? '1px solid black' : 'none',\r\n                          backgroundColor: merging ? 'white' : ''\r\n                        }}>\r\n                        <i className=\"fa fa-times-circle\"\r\n                          style={{\r\n                            color: 'red',\r\n                            display: !index && !mergedTables.filter(table => table.occupiedBy).length && !merging ? 'block': 'none',\r\n                            float: 'right',\r\n                            position: 'absolute',\r\n                            top: 5,\r\n                            right: 5\r\n                          }}\r\n                          onClick={() => unMergeTables(mergeId)}\r\n                        />\r\n                        <DashboardGridItem\r\n                          text={\"Table \" + value.replace(`${restaurantId}/`, '')}\r\n                          doNotDisturb={mergedTables.filter(table => table.doNotDisturb).length}\r\n                          occupiedBy={mergedTables.filter(table => table.occupiedBy).length}\r\n                          merging={merging}\r\n                          merged\r\n                        />\r\n                      </div>)\r\n                    })\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n            <div className=\"DashBoardServicesContainer\">\r\n              <p>Services Que</p>\r\n              <div>\r\n                {servicesQue ?\r\n                  servicesQue.map(item => {\r\n                    return <ServiceQueItem\r\n                      type={item.type}\r\n                      tableNumber={item.tableNumber.replace(`${restaurantId}/`, '')}\r\n                      text={item.text}\r\n                      onClick={() => null}\r\n                    />\r\n                  }) : null\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </> : null}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RestaurantAdmin\r\n","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Dashboard\\KitchenAdmin\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\Admin\\Users\\AllUsers\\index.js",["440"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { customisedAction } from '../../../../redux/actions'\r\nimport { GET_USERS } from '../../../../constants'\r\n\r\nimport { Button, Input } from '../../../../components'\r\n\r\nimport UsersList from './UsersList'\r\n\r\nfunction AllUsers(props) {\r\n\r\n  const [usersFetchCalled, setusersFetchCalled] = useState(false)\r\n  const [filterKey, setfilterKey] = useState('')\r\n\r\n  const fetchingUsers = useSelector(({ usersReducer }) => usersReducer.fetchingUsers)\r\n  const users = useSelector(({ usersReducer }) => usersReducer.users)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (!usersFetchCalled && !fetchingUsers && !users) {\r\n      setusersFetchCalled(true)\r\n      dispatch(customisedAction(GET_USERS))\r\n    }\r\n  }, [])\r\n\r\n  const getFilteredList = () => {\r\n    let filteredUsers = users\r\n    if (filterKey && filterKey.length && users) {\r\n      filteredUsers = users.filter(\r\n        (user) => user.name.toLowerCase().includes(filterKey.toLowerCase())\r\n        || user.restaurantName.toLowerCase().includes(filterKey.toLowerCase())\r\n        || user.role.toLowerCase().includes(filterKey.toLowerCase())\r\n        || user.email.toLowerCase().includes(filterKey.toLowerCase())\r\n      )\r\n    }\r\n    return filteredUsers\r\n  }\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      <h2>Users Management</h2>\r\n      <div className=\"TopOptionsContainer\">\r\n        <div className=\"TopInputContainer\">\r\n          <Input \r\n            placeholder=\"Search Users (by Name, Restaurant Name, Role, Email)\"\r\n            value={filterKey}\r\n            onChange={({ target: { value } }) => setfilterKey(value)}\r\n          />\r\n        </div>\r\n        <div className=\"TopButtonContainer\">\r\n          <Button\r\n            text={filterKey ? \"Clear\" : fetchingUsers ? \"Syncing\" : \"Refresh\"}\r\n            light={fetchingUsers}\r\n            lightAction={() => null}\r\n            iconLeft={<i className={`fa fa-${filterKey ? 'times-circle' : fetchingUsers ? 'refresh fa-pulse' : 'refresh'}`} />}\r\n            onClick={() => filterKey ? setfilterKey('') : dispatch(customisedAction(GET_USERS))} />\r\n        </div>\r\n      </div>\r\n      {fetchingUsers && !users ?\r\n        <div className=\"loadingContainer\">\r\n          <p><i className={`fa fa-refresh ${fetchingUsers ? 'fa-pulse' : ''}`} style={{ padding: '0px 5px' }} />Fetching / Syncing Users . . .</p>\r\n        </div> : null\r\n      }\r\n      <UsersList users={getFilteredList()} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllUsers\r\n","D:\\react js\\DineMate\\client\\src\\views\\Admin\\Users\\RestaurantUsers\\index.js",["441"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { customisedAction } from '../../../../redux/actions'\r\nimport { GET_USERS } from '../../../../constants'\r\n\r\nimport { Button, Input } from '../../../../components'\r\n\r\nimport UsersList from './UsersList'\r\n\r\nfunction RestaurantUsers(props) {\r\n\r\n  const [usersFetchCalled, setusersFetchCalled] = useState(false)\r\n  const [filterKey, setfilterKey] = useState('')\r\n\r\n  const fetchingUsers = useSelector(({ usersReducer }) => usersReducer.fetchingUsers)\r\n  const users = useSelector(({ usersReducer }) => usersReducer.users)\r\n  const admin = useSelector(({ sessionReducer }) => sessionReducer.admin)\r\n  const dispatch = useDispatch()\r\n\r\n  const { id, restaurantId } = admin\r\n\r\n  useEffect(() => {\r\n    if (!usersFetchCalled && !fetchingUsers && !users) {\r\n      setusersFetchCalled(true)\r\n      dispatch(customisedAction(GET_USERS, { restaurantId }))\r\n    }\r\n  }, [])\r\n\r\n  const getFilteredList = () => {\r\n    let filteredUsers = users\r\n    if (filterKey && filterKey.length && users) {\r\n      filteredUsers = users.filter(\r\n        (user) => user.name.toLowerCase().includes(filterKey.toLowerCase())\r\n        || user.role.toLowerCase().includes(filterKey.toLowerCase())\r\n        || user.email.toLowerCase().includes(filterKey.toLowerCase())\r\n      )\r\n    }\r\n    return filteredUsers\r\n  }\r\n\r\n  return (\r\n    <div className=\"Container\">\r\n      <h2>Users Management</h2>\r\n      <div className=\"TopOptionsContainer\">\r\n        <div className=\"TopInputContainer\">\r\n          <Input \r\n            placeholder=\"Search Users (by Name, Restaurant Name, Role, Email)\"\r\n            value={filterKey}\r\n            onChange={({ target: { value } }) => setfilterKey(value)}\r\n          />\r\n        </div>\r\n        <div className=\"TopButtonContainer\">\r\n          <Button\r\n            text={filterKey ? \"Clear\" : fetchingUsers ? \"Syncing\" : \"Refresh\"}\r\n            light={fetchingUsers}\r\n            lightAction={() => null}\r\n            iconLeft={<i className={`fa fa-${filterKey ? 'times-circle' : fetchingUsers ? 'refresh fa-pulse' : 'refresh'}`} />}\r\n            onClick={() => filterKey ? setfilterKey('') : dispatch(customisedAction(GET_USERS, { restaurantId }))} />\r\n        </div>\r\n      </div>\r\n      {fetchingUsers && !users ?\r\n        <div className=\"loadingContainer\">\r\n          <p><i className={`fa fa-refresh ${fetchingUsers ? 'fa-pulse' : ''}`} style={{ padding: '0px 5px' }} />Fetching / Syncing Users . . .</p>\r\n        </div> : null\r\n      }\r\n      <UsersList adminId={id} restaurantId={restaurantId} users={getFilteredList()} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RestaurantUsers\r\n","D:\\react js\\DineMate\\client\\src\\redux\\epics\\generalizedEpic.js",[],"D:\\react js\\DineMate\\client\\src\\views\\Admin\\Restaurants\\RestaurantsList\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\Admin\\Tables\\TablesList\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\Admin\\GenerateQrs\\QrsList\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\Admin\\Categories\\CategoriesList\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\Admin\\Menu\\AddOnsList\\index.js",[],"D:\\react js\\DineMate\\client\\src\\components\\ServiceQueItem\\index.js",[],"D:\\react js\\DineMate\\client\\src\\components\\SectionHeading\\index.js",[],"D:\\react js\\DineMate\\client\\src\\components\\DashboardGridItem\\index.js",[],"D:\\react js\\DineMate\\client\\src\\components\\SmallButtonRed\\index.js",[],"D:\\react js\\DineMate\\client\\src\\components\\Separator\\index.js",[],"D:\\react js\\DineMate\\client\\src\\components\\SmallButton\\index.js",[],"D:\\react js\\DineMate\\client\\src\\components\\SmallTitle\\index.js",[],"D:\\react js\\DineMate\\client\\src\\components\\Button\\index.js",[],"D:\\react js\\DineMate\\client\\src\\components\\DashboardBatches\\index.js",[],"D:\\react js\\DineMate\\client\\src\\components\\Title\\index.js",[],"D:\\react js\\DineMate\\client\\src\\components\\DineMateTitle\\index.js",[],"D:\\react js\\DineMate\\client\\src\\components\\Input\\index.js",[],"D:\\react js\\DineMate\\client\\src\\components\\DropDown\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\Admin\\Menu\\MenuList\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\Admin\\Users\\RestaurantUsers\\UsersList\\index.js",[],"D:\\react js\\DineMate\\client\\src\\views\\Admin\\Users\\AllUsers\\UsersList\\index.js",[],"D:\\react js\\DineMate\\client\\src\\redux\\reducers\\orderReducer.js",["442"],"import {\r\n    GET_ORDER,\r\n    GET_ORDER_SUCCESS,\r\n    GET_ORDER_FAILURE,\r\n    \r\n  } from '../../constants'\r\n  \r\n  export default (state = { \r\n    fetchingOrder: false,    \r\n    order: null\r\n  }, { type, payload }) => {\r\n    switch (type) {\r\n      case GET_ORDER:\r\n        return { ...state, fetchingOrder: true}\r\n      case GET_ORDER_SUCCESS:\r\n        return { ...state, fetchingOrder: false, order: payload }\r\n      case GET_ORDER_FAILURE:\r\n        return { ...state, fetchingOrder: false, order: null }      \r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  ","D:\\react js\\DineMate\\client\\src\\views\\Admin\\OrderManagement\\index.js",["443","444","445","446"],"D:\\react js\\DineMate\\client\\src\\views\\Admin\\OrderManagement\\OderTable\\index.js",["447","448","449","450"],"D:\\react js\\DineMate\\client\\src\\redux\\epics\\admin\\orderManagementEpic.js",[],{"ruleId":"451","replacedBy":"452"},{"ruleId":"453","replacedBy":"454"},{"ruleId":"455","severity":1,"message":"456","line":40,"column":8,"nodeType":"457","endLine":40,"endColumn":10,"suggestions":"458"},{"ruleId":"455","severity":1,"message":"459","line":25,"column":6,"nodeType":"457","endLine":25,"endColumn":13,"suggestions":"460"},{"ruleId":"461","severity":1,"message":"462","line":4,"column":8,"nodeType":"463","messageId":"464","endLine":4,"endColumn":23},{"ruleId":"455","severity":1,"message":"465","line":47,"column":6,"nodeType":"457","endLine":47,"endColumn":20,"suggestions":"466"},{"ruleId":"455","severity":1,"message":"459","line":24,"column":6,"nodeType":"457","endLine":24,"endColumn":13,"suggestions":"467"},{"ruleId":"468","severity":1,"message":"469","line":14,"column":1,"nodeType":"470","endLine":39,"endColumn":2},{"ruleId":"468","severity":1,"message":"469","line":8,"column":1,"nodeType":"470","endLine":39,"endColumn":2},{"ruleId":"468","severity":1,"message":"469","line":9,"column":1,"nodeType":"470","endLine":47,"endColumn":2},{"ruleId":"468","severity":1,"message":"469","line":50,"column":1,"nodeType":"470","endLine":151,"endColumn":2},{"ruleId":"468","severity":1,"message":"469","line":10,"column":1,"nodeType":"470","endLine":31,"endColumn":2},{"ruleId":"468","severity":1,"message":"469","line":14,"column":1,"nodeType":"470","endLine":45,"endColumn":2},{"ruleId":"468","severity":1,"message":"469","line":10,"column":1,"nodeType":"470","endLine":31,"endColumn":2},{"ruleId":"468","severity":1,"message":"469","line":15,"column":1,"nodeType":"470","endLine":48,"endColumn":2},{"ruleId":"461","severity":1,"message":"471","line":1,"column":17,"nodeType":"463","messageId":"464","endLine":1,"endColumn":26},{"ruleId":"455","severity":1,"message":"472","line":25,"column":6,"nodeType":"457","endLine":25,"endColumn":8,"suggestions":"473"},{"ruleId":"474","severity":1,"message":"475","line":35,"column":32,"nodeType":"476","messageId":"477","endLine":35,"endColumn":34},{"ruleId":"455","severity":1,"message":"478","line":21,"column":6,"nodeType":"457","endLine":21,"endColumn":8,"suggestions":"479"},{"ruleId":"455","severity":1,"message":"478","line":31,"column":6,"nodeType":"457","endLine":31,"endColumn":11,"suggestions":"480"},{"ruleId":"455","severity":1,"message":"478","line":27,"column":6,"nodeType":"457","endLine":27,"endColumn":8,"suggestions":"481"},{"ruleId":"461","severity":1,"message":"482","line":3,"column":10,"nodeType":"463","messageId":"464","endLine":3,"endColumn":19},{"ruleId":"461","severity":1,"message":"483","line":16,"column":9,"nodeType":"463","messageId":"464","endLine":16,"endColumn":17},{"ruleId":"455","severity":1,"message":"478","line":26,"column":6,"nodeType":"457","endLine":26,"endColumn":8,"suggestions":"484"},{"ruleId":"455","severity":1,"message":"485","line":19,"column":6,"nodeType":"457","endLine":19,"endColumn":8,"suggestions":"486"},{"ruleId":"461","severity":1,"message":"487","line":19,"column":20,"nodeType":"463","messageId":"464","endLine":19,"endColumn":31},{"ruleId":"461","severity":1,"message":"488","line":20,"column":21,"nodeType":"463","messageId":"464","endLine":20,"endColumn":33},{"ruleId":"455","severity":1,"message":"489","line":36,"column":6,"nodeType":"457","endLine":36,"endColumn":8,"suggestions":"490"},{"ruleId":"491","severity":1,"message":"492","line":89,"column":49,"nodeType":"493","messageId":"494","endLine":92,"endColumn":8},{"ruleId":"495","severity":1,"message":"496","line":89,"column":69,"nodeType":"493","messageId":"497","endLine":89,"endColumn":71},{"ruleId":"455","severity":1,"message":"498","line":25,"column":6,"nodeType":"457","endLine":25,"endColumn":8,"suggestions":"499"},{"ruleId":"455","severity":1,"message":"500","line":28,"column":6,"nodeType":"457","endLine":28,"endColumn":8,"suggestions":"501"},{"ruleId":"468","severity":1,"message":"469","line":8,"column":3,"nodeType":"470","endLine":22,"endColumn":4},{"ruleId":"461","severity":1,"message":"471","line":1,"column":27,"nodeType":"463","messageId":"464","endLine":1,"endColumn":36},{"ruleId":"461","severity":1,"message":"502","line":2,"column":17,"nodeType":"463","messageId":"464","endLine":2,"endColumn":28},{"ruleId":"461","severity":1,"message":"482","line":2,"column":29,"nodeType":"463","messageId":"464","endLine":2,"endColumn":38},{"ruleId":"461","severity":1,"message":"503","line":9,"column":12,"nodeType":"463","messageId":"464","endLine":9,"endColumn":19},{"ruleId":"461","severity":1,"message":"504","line":5,"column":13,"nodeType":"463","messageId":"464","endLine":5,"endColumn":20},{"ruleId":"461","severity":1,"message":"505","line":5,"column":36,"nodeType":"463","messageId":"464","endLine":5,"endColumn":42},{"ruleId":"506","severity":1,"message":"507","line":20,"column":6,"nodeType":"508","messageId":"509","endLine":20,"endColumn":18,"fix":"510"},{"ruleId":"474","severity":1,"message":"511","line":30,"column":32,"nodeType":"476","messageId":"477","endLine":30,"endColumn":34},"no-native-reassign",["512"],"no-negated-in-lhs",["513"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'admin' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["514"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["515"],"no-unused-vars","'orderManagement' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["516"],["517"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'fetchingRestaurants', 'restaurants', and 'restaurantsFetchCalled'. Either include them or remove the dependency array.",["518"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'history' and 'state'. Either include them or remove the dependency array.",["519"],["520"],["521"],"'Separator' is defined but never used.","'dispatch' is assigned a value but never used.",["522"],"React Hook useEffect has missing dependencies: 'adminDashboard' and 'dispatch'. Either include them or remove the dependency array.",["523"],"'setlatitude' is assigned a value but never used.","'setlongitude' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'props.location'. Either include them or remove the dependency array.",["524"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'index', 'mergedRowCounts', 'mergedRowCounts'.","ArrowFunctionExpression","unsafeRefs","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'dispatch', 'fetchingUsers', 'users', and 'usersFetchCalled'. Either include them or remove the dependency array.",["525"],"React Hook useEffect has missing dependencies: 'dispatch', 'fetchingUsers', 'restaurantId', 'users', and 'usersFetchCalled'. Either include them or remove the dependency array.",["526"],"'SmallButton' is defined but never used.","'setType' is assigned a value but never used.","'history' is assigned a value but never used.","'tables' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property order.","MemberExpression","unexpectedWhitespace",{"range":"527","text":"528"},"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"531","fix":"535"},{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"538","fix":"542"},{"desc":"538","fix":"543"},{"desc":"544","fix":"545"},{"desc":"546","fix":"547"},{"desc":"548","fix":"549"},{"desc":"550","fix":"551"},[406,408],".","Update the dependencies array to be: [admin, dispatch]",{"range":"552","text":"553"},"Update the dependencies array to be: [admin, props.history]",{"range":"554","text":"555"},"Update the dependencies array to be: [dispatch, restaurantId]",{"range":"556","text":"557"},{"range":"558","text":"555"},"Update the dependencies array to be: [dispatch, fetchingRestaurants, restaurants, restaurantsFetchCalled]",{"range":"559","text":"560"},"Update the dependencies array to be: [history, state]",{"range":"561","text":"562"},"Update the dependencies array to be: [history, qrs, state]",{"range":"563","text":"564"},{"range":"565","text":"562"},{"range":"566","text":"562"},"Update the dependencies array to be: [adminDashboard, dispatch]",{"range":"567","text":"568"},"Update the dependencies array to be: [props.history, props.location]",{"range":"569","text":"570"},"Update the dependencies array to be: [dispatch, fetchingUsers, users, usersFetchCalled]",{"range":"571","text":"572"},"Update the dependencies array to be: [dispatch, fetchingUsers, restaurantId, users, usersFetchCalled]",{"range":"573","text":"574"},[1501,1503],"[admin, dispatch]",[739,746],"[admin, props.history]",[1841,1855],"[dispatch, restaurantId]",[752,759],[944,946],"[dispatch, fetchingRestaurants, restaurants, restaurantsFetchCalled]",[482,484],"[history, state]",[1067,1072],"[history, qrs, state]",[874,876],[782,784],[697,699],"[adminDashboard, dispatch]",[1464,1466],"[props.history, props.location]",[834,836],"[dispatch, fetchingUsers, users, usersFetchCalled]",[974,976],"[dispatch, fetchingUsers, restaurantId, users, usersFetchCalled]"]